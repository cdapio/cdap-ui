<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright Â© 2014-2022 Cask Data, Inc.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.cdap.cdap</groupId>
  <artifactId>cdap-ui</artifactId>
  <version>6.8.0-SNAPSHOT</version>
  <name>CDAP UI</name>
 
  <distributionManagement>
    <repository>
      <id>sonatype.release</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>sonatype.snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  
  <properties>
    <app.main.class>io.cdap.cdap.ui.ConfigurationJsonTool</app.main.class>
    <!--
      Note: Do not update this while bumping versions for a CDAP release.
      Only update this when releasing a new UI pack.
    -->
    <ui.pack.version>4.3.4_p7</ui.pack.version>
    <guava.version>27.0.1-jre</guava.version>
    <logback.version>1.2.8</logback.version>
    <junit.version>4.13.1</junit.version>
    <testSourceLocation>${project.basedir}/src/test/java/</testSourceLocation>

    <!-- properties for non-standard (e.g. zip, rpm, deb) deployment -->
    <cask.packages.snapshot.repo>http://cask.invalid.snapshot.repo.co</cask.packages.snapshot.repo>
    <cask.packages.release.repo>http://cask.invalid.release.repo.co</cask.packages.release.repo>
    <release.iteration>1</release.iteration>
  </properties>
  
  <repositories>
    <repository>
      <id>sonatype</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-common</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
    </dependency>
  </dependencies>

  <build>
    <testSourceDirectory>${testSourceLocation}</testSourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.6.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>node_modules</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>dist</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>cdap_dist</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>login_dist</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>common_dist</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>node</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>

          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration combine.self="override">
              <outputDirectory>${stage.lib.dir}</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <excludeGroupIds>org.apache.hbase,asm,org.apache.zookeeper,org.apache.kafka,org.apache.twill,\
                org.apache.httpcomponents,org.apache.thrift,org.apache.flume,org.apache.avro,org.ow2.asm,\
                com.google.inject,org.apache.hadoop,commons-codec,com.google.inject.extensions,\
                io.cdap.http,org.codehaus.jackson</excludeGroupIds>
              <excludeArtifactIds>cdap-proto,tephra,zkclient,servlet-api,common-http,\
                common-lang,common-io</excludeArtifactIds>
              <prependGroupId>true</prependGroupId>
              <silent>true</silent>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.rat</groupId>
          <artifactId>apache-rat-plugin</artifactId>
          <version>0.10</version>
          <executions>
            <execution>
              <id>rat-check</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <excludes>
                  <exclude>**/*.iml</exclude>
                  <exclude>**/*.editorconfig</exclude>
                  <exclude>**/server_dist/**</exclude>
                  <exclude>**/server/config/development/session_secret.key</exclude>
                  <exclude>**/*.babelrc</exclude>
                  <exclude>**/*.jshintrc</exclude>
                  <exclude>**/*.jshintignore</exclude>
                  <exclude>**/*.eslintrc.json</exclude>
                  <exclude>**/*.eslintignore</exclude>
                  <exclude>**/*.stylelintignore</exclude>
                  <exclude>**/*.stylelintrc</exclude>
                  <exclude>**/*.svg</exclude>
                  <exclude>**/*__mocks__/**</exclude>
                  <exclude>**/bower_components/**</exclude>
                  <exclude>**/*.bowerrc</exclude>
                  <exclude>**/node_modules/**</exclude>
                  <exclude>**/coverage/**</exclude>
                  <exclude>**/dist/**</exclude>
                  <exclude>**/common_dist/**</exclude>
                  <exclude>**/cdap_dist/**</exclude>
                  <exclude>**/login_dist/**</exclude>
                  <exclude>**/logs/**</exclude>
                  <exclude>**/npm-debug.log</exclude>
                  <exclude>**/node/**</exclude>
                  <exclude>**/*.json</exclude>
                  <exclude>**/*.csv</exclude>
                  <exclude>**/*.lock</exclude>
                  <exclude>**/*.yaml</exclude>
                  <exclude>**/dll/**</exclude>
                  <exclude>**/LICENSE-node</exclude>
                  <exclude>**/cdap-ui-upgrade/**</exclude>
                  <exclude>**/storybook-static/**</exclude>
                  <exclude>**/*.snap</exclude>
                  <exclude>**/*.rst</exclude>
                  <exclude>**/cypress/fixtures/**</exclude>
                  <exclude>**/gitpod/**</exclude>
                  <exclude>**/*.md</exclude>
                  <exclude>**/*.yml</exclude>
                  <exclude>**/*.Dockerfile</exclude>
                </excludes>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>dist</id>
      <properties>
        <package.deb.depends>--depends cdap --replaces cdap-web-app --conflicts cdap-web-app --replaces 'cdap-ui (&lt;&lt; 3.4.0)'</package.deb.depends>
        <package.rpm.depends>--depends cdap --replaces cdap-web-app --conflicts cdap-web-app --replaces 'cdap-ui &lt; 3.4.0'</package.rpm.depends>
        <package.deb.arch>amd64</package.deb.arch>
        <package.rpm.arch>x86_64</package.rpm.arch>
        <package.dirs>opt etc</package.dirs>
        <ui.build.name>cdap-prod-build</ui.build.name>
        <original.service.name>${project.artifactId}</original.service.name>
        <stage.dir>${project.build.directory}/stage-packaging</stage.dir>
        <stage.opt.dir>${stage.dir}/opt/cdap/${package.name}</stage.opt.dir>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.11.0</version>
            <executions>
              <execution>
                <id>dist</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
                <configuration>
                  <nodeVersion>v10.16.2</nodeVersion>
                  <yarnVersion>v1.7.0</yarnVersion>
                </configuration>
              </execution>
              <execution>
                <id>install-node-gyp</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>global add node-gyp@6.1.0</arguments>
                </configuration>
              </execution>
              <execution>
                <id>yarn-install</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>install --silent --frozen-lockfile</arguments>
                </configuration>
              </execution>
              <execution>
                <id>bower-install</id>
                <goals>
                  <goal>bower</goal>
                </goals>
                <configuration>
                  <arguments>install --allow-root</arguments>
                </configuration>
              </execution>
              <execution>
                <id>build-ui</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>run ${ui.build.name}</arguments>
                </configuration>
              </execution>
              <execution>
                <id>build-ui-angular</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>run distribute</arguments>
                </configuration>
              </execution>
              <execution>
                <id>build-node-app</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>run build-server</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>copy-enterprise</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy todir="${stage.opt.dir}">
                      <fileset dir="packaged">
                        <exclude name="node_modules/**" />
                      </fileset>
                    </copy>
                    <copy todir = "${stage.opt.dir}/bin">
                      <fileset dir = "node">
                        <include name="node" />
                      </fileset>
                    </copy>
                    <copy todir = "${stage.opt.dir}/templates">
                      <fileset dir = "templates" />
                    </copy>
                    <copy todir = "${stage.opt.dir}">
                      <fileset dir = "./">
                        <include name="LICENSE-node" />
                      </fileset>
                    </copy>
                    <copy todir = "${stage.opt.dir}/cdap-ui-upgrade">
                      <fileset dir = "cdap-ui-upgrade" />
                    </copy>
                  </target>
                </configuration>
              </execution>
              <!--This is for workaround a bug in resource-plugin that it doesn't preserve file permission-->
              <!--http://jira.codehaus.org/browse/MRESOURCES-132-->
              <execution>
                <id>bin-permission</id>
                <phase>prepare-package</phase>
                <configuration>
                  <failOnError>false</failOnError>
                  <target>
                    <chmod file="${stage.opt.dir}/bin/**" perm="755"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Generate a timestamp property -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.3</version>
            <executions>
              <execution>
                <id>create-timestamp</id>
                <phase>validate</phase>
                <goals>
                  <goal>create-timestamp</goal>
                </goals>
                <configuration>
                  <timestampPropertyName>package.build.timestamp</timestampPropertyName>
                </configuration>
              </execution>
              <execution>
                <id>create-year</id>
                <phase>validate</phase>
                <goals>
                  <goal>create-timestamp</goal>
                </goals>
                <configuration>
                  <timestampPropertyName>package.build.year</timestampPropertyName>
                  <timestampFormat>yyyy</timestampFormat>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Generate the package.version property -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9</version>
            <executions>
              <execution>
                <id>regex-properties</id>
                <phase>validate</phase>
                <goals>
                  <goal>regex-properties</goal>
                </goals>
                <configuration>
                  <regexPropertySettings>
                    <regexPropertySetting>
                      <name>package.name</name>
                      <value>${project.artifactId}</value>
                      <regex>cdap-</regex>
                      <replacement></replacement>
                      <failIfNoMatch>false</failIfNoMatch>
                    </regexPropertySetting>
                    <regexPropertySetting>
                      <name>service.name</name>
                      <value>${original.service.name}</value>
                      <regex>cdap-</regex>
                      <replacement></replacement>
                      <failIfNoMatch>false</failIfNoMatch>
                    </regexPropertySetting>
                    <regexPropertySetting>
                      <name>package.version</name>
                      <value>${project.version}</value>
                      <regex>-SNAPSHOT</regex>
                      <replacement>.${package.build.timestamp}</replacement>
                      <failIfNoMatch>false</failIfNoMatch>
                    </regexPropertySetting>
                  </regexPropertySettings>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Determine the deploy.url for non-standard (e.g. zip, rpm, deb) deployment -->
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <version>1.5</version>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>1.5.8</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>choose-deploy-url</id>
                <phase>initialize</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    if (project.version.endsWith("-SNAPSHOT")){
                      project.properties['deploy.url'] = project.properties['cask.packages.snapshot.repo'];
                      project.properties['dist.deploy.groupId'] = "io.cdap.cdap.distributions.snapshots";
                    } else {
                      project.properties['deploy.url'] = project.properties['cask.packages.release.repo'];
                      project.properties['dist.deploy.groupId'] = "io.cdap.cdap.distributions.release";
                    }
                  </source>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>build-storybook</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.11.0</version>
            <executions>
              <execution>
                <id>dist</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
                <configuration>
                  <nodeVersion>v10.16.2</nodeVersion>
                  <yarnVersion>v1.7.0</yarnVersion>
                </configuration>
              </execution>
              <execution>
                <id>install-node-gyp</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>global add node-gyp@6.1.0</arguments>
                </configuration>
              </execution>
              <execution>
                <id>yarn-install</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>install --silent --frozen-lockfile</arguments>
                </configuration>
              </execution>
              <execution>
                <id>build-ui-storybook</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>run build-storybook</arguments>
                </configuration>
              </execution>
              <execution>
                <id>run-ui-unit-tests</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>jest</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rpm-prepare</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>deb-prepare</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-deb-staging</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${stage.dir}-deb</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${stage.dir}</directory>
                      <includes>
                        <include>opt/**</include>
                        <include>etc/profile.d/**</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>copy-deb-scripts</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dist/deb</outputDirectory>
                  <resources>
                    <!-- Copy it twice, one with filter, one without -->
                    <resource>
                      <directory>${project.parent.basedir}/cdap-distributions/src/debian/init.d</directory>
                      <targetPath>unfilter</targetPath>
                    </resource>
                    <resource>
                      <directory>${project.parent.basedir}/cdap-distributions/src/debian/init.d</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>rename-deb-service</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.build.directory}/dist/deb/cdap-service" tofile="${stage.dir}-deb/etc/init.d/cdap-${service.name}" />
                  </target>
                </configuration>
              </execution>
              <!--This is for workaround a bug in resource-plugin that it doesn't preserve file permission-->
              <!--http://jira.codehaus.org/browse/MRESOURCES-132-->
              <execution>
                <id>deb-init-permission</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <chmod file="${stage.dir}-deb/etc/init.d/**" perm="755"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>deb-bin-permission</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <chmod file="${stage.dir}-deb/opt/cdap/${package.name}/bin/**" perm="755"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>rpm</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.3.1</version>
          </plugin>

          <!-- Extra deployment for rpm package. -->
          <!-- This has to be in child level, otherwise all modules would try to deploy. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8</version>
            <executions>
              <execution>
                <id>deploy-rpm</id>
                <phase>deploy</phase>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
                <configuration>
                  <version>${project.version}</version>
                  <groupId>${dist.deploy.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <packaging>noarch.rpm</packaging>
                  <generatePom>false</generatePom>
                  <file>${project.build.directory}/${project.artifactId}-${package.version}-1.noarch.rpm</file>
                  <classifier>1</classifier>
                  <repositoryId>continuuity</repositoryId>
                  <url>${deploy.url}</url>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>deb</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.3.1</version>
            <executions>
              <execution>
                <id>deb-package</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <executable>fpm</executable>
                  <commandlineArgs>
                    --name "cdap-${package.name}"
                    --vendor "Cask Data, Inc."
                    --maintainer "support@cask.co"
                    --license "Copyright Â© ${package.build.year} Cask Data, Inc. Licensed under the Apache License, Version 2.0."
                    --description "Cask DAP (CDAP) Component: ${package.name}"
                    --category misc
                    -s dir
                    -t deb
                    -C "${stage.dir}-deb"
                    --directories "{stage.opt.dir}"
                    --version "${package.version}"
                    --architecture "${package.deb.arch}"
                    --url "http://cask.co"
                    --template-value "project=${package.name}"
                    --after-install "${project.parent.basedir}/cdap-distributions/src/debian/scripts/postinst"
                    --before-remove "${project.parent.basedir}/cdap-distributions/src/debian/scripts/prerm"
                    --after-remove "${project.parent.basedir}/cdap-distributions/src/debian/scripts/postrm"
                    --iteration "${release.iteration}"
                    --depends coreutils
                    --depends libxml2-utils
                    ${package.deb.depends}
                    ${package.dirs}
                  </commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Extra deployment for deb package -->
          <!-- This has to be in child level, otherwise all modules would try to deploy. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8</version>
            <executions>
              <execution>
                <id>deploy-deb</id>
                <phase>deploy</phase>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
                <configuration>
                  <version>${project.version}</version>
                  <groupId>${dist.deploy.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <packaging>deb</packaging>
                  <generatePom>false</generatePom>
                  <file>${project.build.directory}/${project.artifactId}_${package.version}-1_all.deb</file>
                  <repositoryId>continuuity</repositoryId>
                  <url>${deploy.url}</url>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>tgz</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.4</version>
          </plugin>

          <!-- Extra deployment for tgz package -->
          <!-- This has to be in child level, otherwise all modules would try to deploy. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8</version>
            <executions>
              <execution>
                <id>deploy-tgz</id>
                <phase>deploy</phase>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
                <configuration>
                  <version>${project.version}</version>
                  <groupId>${dist.deploy.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <packaging>tar.gz</packaging>
                  <generatePom>false</generatePom>
                  <file>${project.build.directory}/${project.artifactId}-${package.version}.tar.gz</file>
                  <repositoryId>continuuity</repositoryId>
                  <url>${deploy.url}</url>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>e2e-tests</id>
      <properties>
        <testSourceLocation>src/e2e-test/java</testSourceLocation>
      </properties>
      <build>
        <testResources>
          <testResource>
            <directory>src/e2e-test/resources</directory>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.18.1</version>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0-M5</version>
            <configuration>
              <includes>
                <include>TestRunner.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <version>5.5.0</version>

            <executions>
              <execution>
                <id>execution</id>
                <phase>verify</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <projectName>Cucumber Reports</projectName> <!-- Replace with project name -->
                  <outputDirectory>target/cucumber-reports/advanced-reports</outputDirectory>
                  <buildNumber>1</buildNumber>
                  <skip>false</skip>
                  <inputDirectory>${project.build.directory}/cucumber-reports</inputDirectory>
                  <jsonFiles> <!-- supports wildcard or name pattern -->
                    <param>**/*.json</param>
                  </jsonFiles> <!-- optional, defaults to outputDirectory if not specified -->
                  <classificationDirectory>${project.build.directory}/cucumber-reports</classificationDirectory>
                  <checkBuildResult>true</checkBuildResult>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <dependencies>
        <dependency>
          <groupId>io.cdap.tests.e2e</groupId>
          <artifactId>cdap-e2e-framework</artifactId>
          <version>0.0.1-SNAPSHOT</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>${logback.version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
