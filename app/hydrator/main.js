/*
 * Copyright Â© 2015-2018 Cask Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
// const angular = require('angular');
// const ngAnimate = require('angular-animate');
// const ngSanitize = require('angular-sanitize');
// const $cookies = require('angular-cookies');
// const ngResource = require('angular-resource');
// import { UI_ROUTER_REACT_HYBRID } from '@uirouter/react-hybrid';
// import '@bower_components/angular-bootstrap';
// import 'angular';
// import '@bower_components/bootstrap';
// import '@bower_components/angular-bootstrap';

import '../styles/common.less';
import '../styles/themes/cdap/buttons.less';
import '../styles/themes/cdap/header.less';
import '../styles/themes/cdap/mixins.less';
import '../styles/themes/cdap/tabs.less';
import '../styles/themes/cdap/theme.less';
import '../styles/themes/cdap.less';
import '../directives/app-level-loading-icon/loading.less';
import '../directives/cask-angular-dropdown-text-combo/dropdown-text-combo.less';
import '../directives/cask-angular-json-edit/jsonedit.less';
import '../directives/cask-angular-sortable/sortable.less';
import '../directives/complex-schema/complex-schema.less';
import '../directives/dag-minimap/dag-minimap.less';
import '../directives/dag-plus/color-constants.less';
import '../directives/dag-plus/my-dag.less';
import '../directives/datetime-picker/datetime.less';
import '../directives/datetime-range/datetime-range.less';
import '../directives/fileselect/fileselect.less';
import '../directives/group-side-panel/group-side-panel.less';
import '../directives/macro-widget-toggle/macro-widget-toggle.less';
import '../directives/my-link-button/my-link-button.less';
import '../directives/my-pipeline-configurations/my-pipeline-configurations.less';
import '../directives/my-pipeline-runtime-args/my-pipeline-runtime-args.less';
import '../directives/my-pipeline-summary/my-pipeline-summary.less';
import '../directives/my-popover/my-popover.less';
import '../directives/my-post-run-action-wizard/my-post-run-action-wizard-modal.less';
import '../directives/my-post-run-action-wizard/my-post-run-action-wizard.less';
import '../directives/my-post-run-action-wizard/wizard-configure-confirm-step/wizard-configure-confirm-step.less';
import '../directives/my-post-run-action-wizard/wizard-select-action-step/wizard-select-action-step.less';
import '../directives/my-post-run-actions/my-post-run-actions.less';
import '../directives/node-metrics/node-metrics.less';
import '../directives/plugin-functions/functions/get-property-value/get-property-value.less';
import '../directives/plugin-functions/functions/get-schema/get-schema.less';
import '../directives/plugin-functions/functions/output-schema/output-schema.less';
import '../directives/plugin-templates/plugin-templates.less';
import '../directives/splitter-popover/splitter-popover.less';
import '../directives/timestamp-picker/timestamp.less';
import '../directives/validators/validators.less';
import '../directives/widget-container/widget-complex-schema-editor/widget-complex-schema-editor.less';
import '../directives/widget-container/widget-container.less';
import '../directives/widget-container/widget-ds-multiplevalues/widget-ds-multiplevalues.less';
import '../directives/widget-container/widget-dsv/widget-dsv.less';
import '../directives/widget-container/widget-function-dropdown-with-alias/widget-function-dropdown-with-alias.less';
import '../directives/widget-container/widget-input-schema/widget-input-schema.less';
import '../directives/widget-container/widget-join-types/widget-join-types.less';
import '../directives/widget-container/widget-js-editor/widget-js-editor.less';
import '../directives/widget-container/widget-json-editor/widget-json-editor.less';
import '../directives/widget-container/widget-keyvalue/widget-keyvalue.less';
import '../directives/widget-container/widget-keyvalue-encoded/widget-keyvalue-encoded.less';
// import '../directives/widget-container/widget-multi-select-dropdown/widget-multi-select-dropdown.less';
import '../directives/widget-container/widget-number/widget-number.less';
import '../directives/widget-container/widget-password/widget-password.less';
import '../directives/widget-container/widget-radio-group/widget-radio-group.less';
import '../directives/widget-container/widget-rulesengine-editor/rules-engine-modal.less';
import '../directives/widget-container/widget-schema-editor/widget-schema-editor.less';
import '../directives/widget-container/widget-sql-conditions/widget-sql-conditions.less';
import '../directives/widget-container/widget-sql-select-fields/widget-sql-select-fields.less';
import '../directives/widget-container/widget-textarea-validate/widget-textarea-validate.less';
import '../directives/widget-container/widget-toggle-switch/widget-toggle-switch.less';
import '../directives/widget-container/widget-wrangler-directives/widget-wrangler-directive.less';
import '../directives/widget-container/widget-wrangler-directives/wrangler-modal.less';
import '../hydrator/adapters.less';
import '../hydrator/bottompanel.less';
import '../hydrator/hydrator-modal.less';
import '../hydrator/leftpanel.less';
import '../hydrator/toppanel.less';
import '../styles/bootstrap.less';


const CaskCommon = require('../common/cask-shared-components');
if (!window.CaskCommon) {
  window.CaskCommon = CaskCommon;
}

const uuid = require('uuid');
window.uuid = uuid;



angular
  .module(PKG.name, [

    angular.module(PKG.name +'.features', [
      PKG.name+'.feature.hydrator',
    ]).name,

    angular.module(PKG.name+'.commons', [

      angular.module(PKG.name+'.services', [
        'ngAnimate',
        // 'ngSanitize',
        'ngResource',
        'ngStorage',
        // [
          'ui.router',
        // UI_ROUTER_REACT_HYBRID],
        'ngCookies'
      ]).name,

      angular.module(PKG.name+'.filters', [
        PKG.name+'.services'
      ]).name,
      'mgcrea.ngStrap.datepicker',
      'mgcrea.ngStrap.timepicker',

      'mgcrea.ngStrap.core',
      'mgcrea.ngStrap.helpers.dimensions',

      'mgcrea.ngStrap.alert',

      'mgcrea.ngStrap.popover',
      'mgcrea.ngStrap.dropdown',
      'mgcrea.ngStrap.typeahead',
      'mgcrea.ngStrap.select',
      'mgcrea.ngStrap.collapse',

      // 'mgcrea.ngStrap.modal',
      'ui.bootstrap.modal',
      'ui.bootstrap',

      'mgcrea.ngStrap.modal',

      // 'ncy-angular-breadcrumb',
      'angularMoment',
      'ui.ace',
      'gridster',
      'angular-cron-jobs',
      'hc.marked',
      'ngFileSaver',
      'infinite-scroll',
      'react'
    ]).name,

    'angular-loading-bar'
  ])
  .value('THROTTLE_MILLISECONDS', 1000) // throttle infinite scroll

  .run(function ($rootScope, $state, $stateParams) {
    // It's very handy to add references to $state and $stateParams to the $rootScope
    // so that you can access them from any scope within your applications.For example,
    // <li ng-class="{ active: $state.includes('contacts.list') }"> will set the <li>
    // to active whenever 'contacts.list' or one of its decendents is active.
    $rootScope.$state = $state;
    $rootScope.$stateParams = $stateParams;

    // for debugging... or to trigger easter eggs?
    window.$go = $state.go;
  })

  .run(function() {
    window.CaskCommon.ThemeHelper.applyTheme();
  })

  .config(function (MyDataSourceProvider) {
    MyDataSourceProvider.defaultInterval = 5;
  })

  .config(function ($locationProvider) {
    $locationProvider.html5Mode(true);
  })

  .run(function ($rootScope) {
    $rootScope.defaultPollInterval = 10000;
  })
  .run(function($rootScope, myHelpers, MYAUTH_EVENT) {
    $rootScope.$on(MYAUTH_EVENT.logoutSuccess, function() {
      window.location.href = myHelpers.getAbsUIUrl({
        uiApp: 'login',
        redirectUrl: location.pathname,
        clientId: 'hydrator'
      });
    });
  })

  .run(function(myNamespace) {
    myNamespace.getList();
  })
  // http provider no longer worked
  // .config(function($httpProvider) {
  //   $httpProvider.interceptors.push(function($rootScope, myHelpers) {
  //     return {
  //       'request': function(config) {
  //         var extendConfig = {
  //           headers: {
  //             'X-Requested-With': 'XMLHttpRequest',
  //           }
  //         };
  //         if (
  //             $rootScope.currentUser && !myHelpers.objectQuery(config, 'data', 'profile_view')
  //            ) {

  //           config = angular.extend(config, extendConfig, {
  //             user: $rootScope.currentUser || null,
  //             headers: {
  //               'Content-Type': 'application/json',
  //             }
  //           });

  //           // This check is added because of HdInsight gateway security.
  //           // If we set Authorization to null, it strips off their Auth token
  //           if (window.CDAP_CONFIG.securityEnabled && $rootScope.currentUser.token) {
  //             // Accessing stuff from $rootScope is bad. This is done as to resolve circular dependency.
  //             // $http <- myAuthPromise <- myAuth <- $http <- $templateFactory <- $view <- $state
  //             extendConfig.headers.Authorization = 'Bearer ' + $rootScope.currentUser.token;
  //           }

  //           extendConfig.headers.sessionToken = window.CaskCommon.SessionTokenStore.default.getState();
  //         }
  //         angular.extend(config, extendConfig);
  //         return config;
  //       }
  //     };
  //   });
  // })

  .config(function ($alertProvider) {
    angular.extend($alertProvider.defaults, {
      animation: 'am-fade-and-scale',
      container: '#alerts',
      duration: false
    });
  })

  .config(function ($uibTooltipProvider) {
    $uibTooltipProvider.setTriggers({
      'customShow': 'customHide'
    });
  })

  .config(function ($compileProvider) {
    $compileProvider.aHrefSanitizationWhitelist(
      /^\s*(https?|ftp|mailto|tel|file|blob):/
    );

    /* !! DISABLE DEBUG INFO !! */
  })

  .config(function (cfpLoadingBarProvider) {
    cfpLoadingBarProvider.includeSpinner = false;
  })

  .config(function (caskThemeProvider) {
    caskThemeProvider.setThemes([
      'cdapb'  // customized theme
    ]);
  })

  .config(['markedProvider', function (markedProvider) {
    markedProvider.setOptions({
      gfm: true,
      tables: true
    });
  }])

  .run(function() {
    window.CaskCommon.StatusFactory.startPollingForBackendStatus();
  })

  .run(function (MYSOCKET_EVENT, myAlert, EventPipe) {

    EventPipe.on(MYSOCKET_EVENT.message, function (data) {
      if (data.statusCode > 399 && !data.resource.suppressErrors) {
        myAlert({
          title: data.statusCode.toString(),
          content: data.response || 'Server had an issue, please try refreshing the page',
          type: 'danger'
        });
      }

      // The user doesn't need to know that the backend node
      // is unable to connect to CDAP. Error messages add no
      // more value than the pop showing that the FE is waiting
      // for system to come back up. Most of the issues are with
      // connect, other than that pass everything else to user.
      if (data.warning && data.error.syscall !== 'connect') {
        myAlert({
          content: data.warning,
          type: 'warning'
        });
      }
    });
  })

  angular.module('cdap-ui.commons').run([
    '$templateCache',
    function($templateCache) {
      $templateCache.put(
        'cask-angular-confirmable/confirm-modal.html',
        '\n\n<div class="modal {{customClass}}" tabindex="-1" role="dialog">\n  <div class="modal-dialog modal-sm">\n    <div class="modal-content">\n      <div class="modal-header" ng-show="title">\n        <h3 class="modal-title" ng-bind="title"></h3>\n      </div>\n      <div class="modal-body" ng-bind-html="content"></div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$hide()">Cancel</button>\n        <button type="button" class="btn btn-danger" ng-click="doConfirm()">OK</button>\n      </div>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'cask-angular-dropdown-text-combo/dropdown-text-combo.html',
        '\n\n<div class="dropdown-control-group am-fade-and-slide-right" ng-repeat="(key, value) in model">\n  <div class="row">\n    <div class="col-xs-5">\n      <input type="text" value="{{key}}" class="form-control" readonly="readonly">\n    </div>\n    <div class="col-xs-7">\n      <div ng-repeat="field in textFields">\n\n        <div class="input-group">\n          <label for="cask-ddtc-{{key}}-{{$index}}" class="input-group-addon">\n            {{field.placeholder || (field.name | caskCapitalizeFilter)}}\n          </label>\n          <input type="text" id="cask-ddtc-{{key}}-{{$index}}" ng-model="value[field.name]" name="{{field.name}}" class="form-control">\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <p class="remove">\n    <a href="" class="btn btn-danger btn-xs" ng-click="rmAsset(key)">\n      <span class="fa fa-trash"></span>\n      <span class="sr-only">remove {{assetLabel}}</span>\n    </a>\n  </p>\n\n</div>\n\n<p class="form-control-static">\n  <a href="" class="btn btn-info btn-xs" bs-dropdown="dropdownValues" ng-disabled="!dropdownValues.length">\n    <span class="fa fa-plus"></span>\n    Add {{assetLabel}}\n  </a>\n</p>\n'
      );
      $templateCache.put(
        'app-level-loading-icon/loading.html',
        '\n\n<div class="modal-body text-center" app-level-loading-icon>\n\n  <div class="icon-loading-bars text-xs-center">\n    <svg class="loading-bar" version="1.1" x="0px" y="0px" width="24px" height="30px" viewBox="0 0 24 30">\n    <rect x="0" y="10" width="4" height="10" fill="#333" opacity="0.2">\n      <animate attributeName="opacity" attributeType="XML" values="0.2; 1; .2" begin="0s" dur="0.6s" repeatCount="indefinite"/>\n      <animate attributeName="height" attributeType="XML" values="10; 20; 10" begin="0s" dur="0.6s" repeatCount="indefinite"/>\n      <animate attributeName="y" attributeType="XML" values="10; 5; 10" begin="0s" dur="0.6s" repeatCount="indefinite"/>\n    </rect>\n    <rect x="8" y="10" width="4" height="10" fill="#333" opacity="0.2">\n      <animate attributeName="opacity" attributeType="XML" values="0.2; 1; .2" begin="0.15s" dur="0.6s" repeatCount="indefinite"/>\n      <animate attributeName="height" attributeType="XML" values="10; 20; 10" begin="0.15s" dur="0.6s" repeatCount="indefinite"/>\n      <animate attributeName="y" attributeType="XML" values="10; 5; 10" begin="0.15s" dur="0.6s" repeatCount="indefinite"/>\n    </rect>\n    <rect x="16" y="10" width="4" height="10" fill="#333" opacity="0.2">\n      <animate attributeName="opacity" attributeType="XML" values="0.2; 1; .2" begin="0.3s" dur="0.6s" repeatCount="indefinite"/>\n      <animate attributeName="height" attributeType="XML" values="10; 20; 10" begin="0.3s" dur="0.6s" repeatCount="indefinite"/>\n      <animate attributeName="y" attributeType="XML" values="10; 5; 10" begin="0.3s" dur="0.6s" repeatCount="indefinite"/>\n    </rect>\n    </svg>\n  </div>\n  <h2> {{message}} </h2>\n  <h4>{{subtitle}}</h4>\n</div>\n'
      );
      $templateCache.put(
        'cask-angular-progress/bar.html',
        '\n<div class="progress">\n  <div role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent+\'%\'}" ng-class="cls">\n    {{percent}}%\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'cask-angular-password/click2show.html',
        '\n\n<span class="input-group input-group-sm">\n  <a href="" class="btn btn-default input-group-addon" ng-class="{\'active\': show}" ng-click="doToggle()">\n      <span class="fa" ng-class="{\'fa-toggle-on\': show, \'fa-toggle-off\': !show}"></span>\n  </a>\n  <input type="text" value="{{show ? value : \'\'}}" placeholder="password" ng-click="show || doToggle()" class="form-control" style="cursor:crosshair" cask-focus="{{uid}}" readonly="readonly">\n</span>\n'
      );
      $templateCache.put(
        'cask-angular-promptable/prompt-modal.html',
        '\n\n<div class="modal" tabindex="-1" role="dialog">\n  <div class="modal-dialog modal-sm">\n    <form class="modal-content" ng-submit="evalPromptable()">\n      <div class="modal-header" ng-show="title">\n        <h3 class="modal-title" ng-bind="title"></h3>\n      </div>\n      <div class="modal-body">\n        <input type="text" class="form-control input-lg" ng-model="data[\'value\']" cask-focus="caskPromptModal">\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$hide()">Cancel</button>\n        <button type="submit" class="btn btn-success">OK</button>\n      </div>\n    </form>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'complex-schema/complex-schema.html',
        '\n\n<div class="complex-schema-container" ng-class="{ \'disabled\': ComplexSchema.isDisabled }">\n  <div ng-if="!ComplexSchema.emptySchema || !ComplexSchema.isDisabled">\n    <div class="clearfix" ng-if="::!ComplexSchema.isRecordSchema">\n      <div class="input-column header">\n        <h6>Name</h6>\n      </div>\n\n      <div class="type-column header">\n        <h6>Type</h6>\n      </div>\n\n      <div class="fields-actions">\n        <div class="nullable-header text-center">\n          <h6>Null</h6>\n        </div>\n      </div>\n    </div>\n\n    <fieldset ng-disabled="ComplexSchema.isDisabled" class="schema-fields-container" ng-class="{\'disabled\': ComplexSchema.isDisabled }">\n      <div uib-tooltip="{{ ComplexSchema.disabledTooltip }}" tooltip-placement="top" tooltip-enable="ComplexSchema.isInStudio && ComplexSchema.isDisabled && ComplexSchema.disabledTooltip" tooltip-append-to-body="true" id="schema-container-{{id}}">\n        <div class="error" ng-if="ComplexSchema.error">\n          {{ ComplexSchema.error }}\n        </div>\n\n        <fieldset disabled="disabled">\n          <my-record-schema ng-model="ComplexSchema.schemaPrefix" is-disabled="ComplexSchema.isDisabled" ng-if="ComplexSchema.schemaPrefix">\n          </my-record-schema>\n        </fieldset>\n\n        <div ng-repeat="field in lazyLoadedParsedSchema track by field.id" class="field-row" ng-class="{\'nested-row\': !field.nested}" lazyload-id="{{$index}}">\n          <div class="clearfix" ng-class="{\'error-row\': ComplexSchema.errors[field.name]}" data-cy="schema-row-{{$index}}" data-testid="schema-row-{{$index}}">\n            <div class="input-column" ng-class="{\'tab-header\': field.nested}">\n              <div class="tab-header-inner">\n                <input type="text" id="{{ field.id }}" class="form-control" data-cy="{{ field.name }}-schema-field" data-testid="{{ field.name }}-schema-field" title="{{ field.name }}" ng-model="field.name" ng-blur="ComplexSchema.formatOutput()" ng-keypress="$event.keyCode === 13 && ComplexSchema.addField($index)" placeholder="Field Name" ng-paste="ComplexSchema.pasteFields($event, $index)" ng-class="{\'disabled\': ComplexSchema.isDisabled }" data-cy="schema-row-field-name-input-{{$index}}" data-testid="schema-row-field-name-input-{{$index}}">\n              </div>\n            </div>\n            <div class="type-column">\n              <div class="select-wrapper">\n                <select class="form-control" ng-model="field.displayType" title="{{ field.displayType }}" ng-options="option as option for option in ComplexSchema.SCHEMA_TYPES" ng-change="ComplexSchema.changeType(field)" data-cy="schema-row-type-select-{{$index}}" data-testid="schema-row-type-select-{{$index}}">\n                </select>\n              </div>\n            </div>\n\n            <div class="fields-actions">\n              <div class="checkbox text-center">\n                <input type="checkbox" ng-model="field.nullable" ng-change="ComplexSchema.formatOutput()">\n              </div>\n\n              <div class="actions-buttons text-right" ng-if="!ComplexSchema.isDisabled">\n                <button class="btn btn-link" ng-click="ComplexSchema.removeField($index)" data-cy="schema-row-remove-button" data-testid="schema-row-remove-button">\n                  <i class="text-danger fa fa-trash"></i>\n                </button>\n                <button class="btn btn-link" ng-click="ComplexSchema.addField($index)" data-cy="schema-row-add-button" data-testid="schema-row-add-button">\n                  <i class="fa fa-plus"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <span class="error" data-cy="schema-row-error-{{$index}}" data-testid="schema-row-error-{{$index}}">\n            {{ComplexSchema.errors[field.name] }}\n          </span>\n          <my-embedded-schema-selector type="field.type" display-type="field.displayType" parent-format-output="ComplexSchema.formatOutput()" is-disabled="ComplexSchema.isDisabled" collapse="field.collapse">\n          </my-embedded-schema-selector>\n        </div>\n        <div ng-if="ComplexSchema.lazyloading && ComplexSchema.parsedSchema.length > 100">\n          <div class="text-center fa fa-spin fa-spinner"></div>\n          Loading...\n        </div>\n      </div>\n    </fieldset>\n\n  </div>\n  <div ng-if="ComplexSchema.emptySchema && ComplexSchema.isDisabled">\n    No Schema Available\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'cron-schedule-view/cron-schedule-view.html',
        ' \n\n<table class="table table-responsive">\n  <thead>\n    <th class="text-center">min</th>\n    <th class="text-center">hour</th>\n    <th class="text-center">day/month</th>\n    <th class="text-center">month</th>\n    <th class="text-center">day/week</th>\n  </thead>\n\n  <tbody class="text-center">\n    <tr>\n      <td>{{ schedule.time.min }}</td>\n      <td>{{ schedule.time.hour }}</td>\n      <td>{{ schedule.time.day }}</td>\n      <td>{{ schedule.time.month }}</td>\n      <td>{{ schedule.time.week }}</td>\n    </tr>\n  </tbody>\n</table>\n'
      );
      $templateCache.put(
        'dag-minimap/dag-minimap.html',
        '\n\n<div class="dag-minimap" ng-show="MinimapCtrl.state.nodes.length > MinimapCtrl.MINIMAP_MIN_NUMBER_NODES">\n  \n  <div class="nodes-container">\n    \n    <div class="node {{ node.type }}" ng-repeat="node in MinimapCtrl.state.nodes" ng-style="node.minimapStyle"></div>\n  </div>\n\n  \n  <div class="viewport-container" id="viewport-container">\n    <div class="viewport-box" ng-style="MinimapCtrl.state.viewport" data-testid="minimap-viewport-box"></div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'dag-plus/my-dag.html',
        '\n\n\n\n<div ng-if="false" class="btn-group-vertical btn-group-sm zoom-control">\n  <button class="btn btn-default" data-cy="pipeline-zoom-in-control" data-testid="pipeline-zoom-in-control" ng-click="DAGPlusPlusCtrl.zoomIn()" uib-tooltip="Zoom In" ng-if="!DAGPlusPlusCtrl.disableNodeClick" tooltip-append-to-body="true" tooltip-placement="left" tooltip-popup-delay="500">\n    <i class="fa fa-plus"></i>\n  </button>\n\n  <button class="btn btn-default" ng-click="DAGPlusPlusCtrl.zoomOut()" data-cy="pipeline-zoom-out-control" data-testid="pipeline-zoom-out-control" ng-if="!DAGPlusPlusCtrl.disableNodeClick" uib-tooltip="Zoom Out" tooltip-append-to-body="true" tooltip-placement="left" tooltip-popup-delay="500">\n    <i class="fa fa-minus"></i>\n  </button>\n\n  <button class="btn btn-default" ng-click="DAGPlusPlusCtrl.fitToScreen()" data-cy="pipeline-fit-to-screen-control" data-testid="pipeline-fit-to-screen-control" ng-if="!DAGPlusPlusCtrl.disableNodeClick" uib-tooltip="Fit to screen" tooltip-append-to-body="true" tooltip-placement="left" tooltip-popup-delay="500">\n    <i class="icon-fit"></i>\n  </button>\n\n  <button class="btn btn-default" ng-click="DAGPlusPlusCtrl.cleanUpGraph()" data-cy="pipeline-clean-up-graph-control" data-testid="pipeline-clean-up-graph-control" ng-if="!DAGPlusPlusCtrl.isDisabled" uib-tooltip="Align" tooltip-append-to-body="true" tooltip-placement="left" tooltip-popup-delay="500">\n    <i class="icon-clean"></i>\n  </button>\n\n  \n  <button class="btn btn-default" ng-click="DAGPlusPlusCtrl.undoActions()" ng-if="!DAGPlusPlusCtrl.isDisabled" ng-disabled="DAGPlusPlusCtrl.undoStates.length === 0" uib-tooltip="Undo (Ctrl/Cmd + Z)" tooltip-append-to-body="true" tooltip-placement="left" tooltip-popup-delay="500" data-cy="pipeline-undo-action-btn" data-testid="pipeline-undo-action-btn">\n    <i class="fa fa-undo"></i>\n  </button>\n\n  \n  <button class="btn btn-default" ng-click="DAGPlusPlusCtrl.redoActions()" ng-if="!DAGPlusPlusCtrl.isDisabled" ng-disabled="DAGPlusPlusCtrl.redoStates.length === 0" uib-tooltip="Redo (Ctrl/Cmd + Shift + Z)" tooltip-append-to-body="true" tooltip-placement="left" tooltip-popup-delay="500" data-cy="pipeline-redo-action-btn" data-testid="pipeline-redo-action-btn">\n    <i class="fa fa-repeat"></i>\n  </button>\n\n  <button class="btn btn-default" uib-tooltip="Move" tooltip-append-to-body="true" tooltip-placement="left" tooltip-popup-delay="500" ng-if="!DAGPlusPlusCtrl.isDisabled" ng-click="DAGPlusPlusCtrl.selectionBox.toggleSelectionMode()" ng-class="{\'move-mode-selected\': !DAGPlusPlusCtrl.selectionBox.toggle}" data-cy="pipeline-move-mdoe-action-btn" data-testid="pipeline-move-mdoe-action-btn">\n    <i class="fa fa-arrows"></i>\n  </button>\n\n  <pipeline-comments-action-btn tooltip="\'Show/Hide Pipeline Comments\'" comments="DAGPlusPlusCtrl.pipelineComments" on-change="DAGPlusPlusCtrl.setPipelineComments" disabled="DAGPlusPlusCtrl.isDisabled"></pipeline-comments-action-btn>\n</div>\n\n\n<pipeline-canvas-action-btns ng-if="true" set-pipeline-comments="DAGPlusPlusCtrl.setPipelineComments" pipeline-comments="DAGPlusPlusCtrl.pipelineComments" is-disabled="DAGPlusPlusCtrl.isDisabled" selection-box="DAGPlusPlusCtrl.selectionBox" redo-states="DAGPlusPlusCtrl.redoStates" redo-actions="DAGPlusPlusCtrl.redoActions" undo-states="DAGPlusPlusCtrl.undoStates" undo-actions="DAGPlusPlusCtrl.undoActions" clean-up-graph="DAGPlusPlusCtrl.cleanUpGraph" fit-to-screen="DAGPlusPlusCtrl.fitToScreen" disable-node-click="DAGPlusPlusCtrl.disableNodeClick" zoom-out="DAGPlusPlusCtrl.zoomOut" zoom-in="DAGPlusPlusCtrl.zoomIn"></pipeline-canvas-action-btns>\n\n<div class="my-js-dag" ng-class="{\'disabled\': DAGPlusPlusCtrl.isDisabled, \'normal-cursor\': disableNodeClick, \'preview-mode\': previewMode }" ng-click="DAGPlusPlusCtrl.handleCanvasClick($event, true)">\n    <div id="diagram-container" ng-class="{\'move-mode\': !DAGPlusPlusCtrl.selectionBox.toggle, \'disabled\': DAGPlusPlusCtrl.isDisabled}">\n      <div id="dag-container" ng-style="DAGPlusPlusCtrl.panning.style">\n        \n        <div ng-repeat="node in nodes" class="box {{node.type}}" ng-style="node._uiPosition" data-type="{{node.type}}" id="{{node.id}}" data-nodeid="{{node.name}}" data-cy="plugin-node-{{node.plugin.name}}-{{node.type}}-{{$index}}" data-testid="plugin-node-{{node.plugin.name}}-{{node.type}}-{{$index}}" ng-class="{\n                 \'wrangler\': node.plugin.name === \'Wrangler\',\n                 \'node-menu-open\': DAGPlusPlusCtrl.nodeMenuOpen === node.name,\n                 \'selected\': DAGPlusPlusCtrl.isNodeSelected(node.id) || DAGPlusPlusCtrl.activePluginToComment == node.id,\n               }">\n          <div class="comments-wrapper" ng-if="node.information.comments.list.length > 0 || DAGPlusPlusCtrl.activePluginToComment == node.id">\n            <comment comments="node.information.comments.list" comments-id="node.id" on-change="DAGPlusPlusCtrl.setComments" placement="\'bottom-start\'" is-open="DAGPlusPlusCtrl.activePluginToComment == node.id" on-open="DAGPlusPlusCtrl.setPluginActiveForComment" on-close="DAGPlusPlusCtrl.setPluginActiveForComment" disabled="DAGPlusPlusCtrl.isDisabled"></comment>\n          </div>\n          <div class="node" ng-mouseenter="DAGPlusPlusCtrl.nodeMouseEnter(node)" ng-mouseleave="DAGPlusPlusCtrl.nodeMouseLeave(node)" ng-click="DAGPlusPlusCtrl.selectNode($event, node)">\n            <div class="inner" ng-if="[\'action\', \'sparkprogram\'].indexOf(node.type) !== -1"></div>\n            <div class="endpoint-circle" ng-if="node.type !== \'splittertransform\'" ng-class="{\'disabled\': DAGPlusPlusCtrl.isDisabled, \'endpoint-circle-right\': node.type === \'condition\'}" ng-attr-id="{{node.type === \'condition\' ? \'endpoint_\' + node.id + \'_condition_true\' : \'endpoint_\' + node.id}}" data-nodeid="{{node.name}}" data-nodetype="{{node.type === \'condition\' ? \'condition-true\' : \'regular\'}}" ng-mouseup="DAGPlusPlusCtrl.selectEndpoint($event, node)" data-cy="plugin-endpoint-{{node.plugin.name}}-{{node.type}}-right" data-testid="plugin-endpoint-{{node.plugin.name}}-{{node.type}}-right">\n              <div class="endpoint-caret" ng-if="!DAGPlusPlusCtrl.isDisabled"></div>\n            </div>\n            <div class="endpoint-circle node-splitter-endpoint" ng-if="node.type === \'splittertransform\'" ng-class="{\'disabled\': DAGPlusPlusCtrl.isDisabled}">\n              <div class="node-spitter-num-ports" ng-if="node.outputSchema.length && node.outputSchema[0].name !== \'etlSchemaBody\'" ng-bind="node.outputSchema.length">\n              </div>\n              <div class="node-splitter-popover" ng-if="node.outputSchema.length && node.outputSchema[0].name !== \'etlSchemaBody\'" my-splitter-popover node="node" ports="node.outputSchema" is-disabled="DAGPlusPlusCtrl.isDisabled" on-metrics-click="DAGPlusPlusCtrl.onMetricsClick" disable-metrics-click="disableMetricsClick" metrics-data="metricsData">\n              </div>\n            </div>\n            <div class="endpoint-circle endpoint-circle-bottom" ng-if="node.type === \'condition\'" ng-class="{\'disabled\': DAGPlusPlusCtrl.isDisabled}" ng-mouseup="DAGPlusPlusCtrl.selectEndpoint($event, node)" ng-attr-id="{{\'endpoint_\' + node.id + \'_condition_false\'}}" data-nodeid="{{node.name}}" data-nodetype="condition-false" data-cy="plugin-endpoint-{{node.plugin.name}}-{{node.type}}-false" data-testid="plugin-endpoint-{{node.plugin.name}}-{{node.type}}-false">\n              <div class="endpoint-caret" ng-if="!DAGPlusPlusCtrl.isDisabled"></div>\n            </div>\n            <div ng-click="node.isPluginAvailable && !disableNodeClick && DAGPlusPlusCtrl.onNodeClick($event, node)">\n              <div class="error-node-notification" ng-if="node.errorCount > 0" data-cy="node-badge" data-testid="node-badge">\n                <span class="badge" ng-class="{\'badge-warning\': !node.error, \'badge-danger\': node.error}">\n                  <span data-cy="node-error-count" data-testid="node-error-count">{{node.errorCount}}</span>\n                </span>\n              </div>\n            </div>\n            <div class="node-info" ng-class="{ \'node-no-errors\': node.errorCount === 0 || DAGPlusPlusCtrl.isDisabled}">\n              <div ng-if="!DAGPlusPlusCtrl.shouldShowCustomIcon(node)" class="node-icon fa {{node.icon}}"></div>\n\n              <div class="node-icon icon-container" ng-if="DAGPlusPlusCtrl.shouldShowCustomIcon(node)">\n                <img src="{{ DAGPlusPlusCtrl.getCustomIconSrc(node) }}">\n              </div>\n\n\n              <div class="node-metadata">\n                <div class="node-name" ng-bind="node.plugin.label || node.name" ng-attr-title="{{node.plugin.label || node.name}}" data-testid="plugin-node-name-{{node.plugin.name}}-{{node.type}}-{{$index}}">\n                </div>\n                <div class="node-version" ng-class="{ \'hidden\': DAGPlusPlusCtrl.nodeMenuOpen === node.name}" ng-bind="node.plugin.artifact.version">\n                </div>\n                <button data-cy="node-properties-btn" data-testid="node-properties-btn" ng-class="{\'node-configure-btn\': true,\n                                 \'btn-shown\': DAGPlusPlusCtrl.nodeMenuOpen === node.name,\n                                 \'btn-disabled\': !node.isPluginAvailable}" ng-click="!disableNodeClick && DAGPlusPlusCtrl.onNodeClick($event, node)" ng-disabled="!node.isPluginAvailable">\n                  <span class="node-configure-btn-label" uib-tooltip="{{ !node.isPluginAvailable ? \'Plugin artifact is not available.\' : \'\'}}" tooltip-popup-delay="300" tooltip-placement="right" tooltip-append-to-body="true">\n                    Properties\n                  </span>\n                </button>\n              </div>\n            </div>\n            <div class="node-preview-data-btn" ng-if="previewMode && [\'action\', \'sparkprogram\', \'condition\'].indexOf(node.type) === -1" data-cy="{{node.plugin.name + \'-preview-data-btn\'}}" data-testid="{{node.plugin.name + \'-preview-data-btn\'}}">\n              <a href ng-click="DAGPlusPlusCtrl.onPreviewData($event, node)">Preview Data</a>\n            </div>\n            <div class="node-metrics" ng-if="DAGPlusPlusCtrl.isDisabled && [\'action\', \'sparkprogram\', \'condition\'].indexOf(node.type) === -1">\n              <my-node-metrics on-click="DAGPlusPlusCtrl.onMetricsClick" node="node" disabled="disableMetricsClick" metrics-data="metricsData">\n              </my-node-metrics>\n            </div>\n            <div class="node-alerts-errors" ng-if="DAGPlusPlusCtrl.shouldShowAlertsPort(node) || DAGPlusPlusCtrl.shouldShowErrorsPort(node)">\n              <div class="node-alerts" ng-if="DAGPlusPlusCtrl.shouldShowAlertsPort(node)">\n                <span>Alert</span>\n                <div class="endpoint-circle endpoint-circle-bottom" ng-class="{\'disabled\': DAGPlusPlusCtrl.isDisabled}" ng-mouseup="DAGPlusPlusCtrl.selectEndpoint($event, node)" ng-attr-id="{{\'endpoint_\' + node.id + \'_alert\'}}" data-nodeid="{{node.name}}" data-nodetype="alert">\n                  <div class="endpoint-caret" ng-if="!DAGPlusPlusCtrl.isDisabled"></div>\n                </div>\n              </div>\n              <div class="node-errors" ng-if="DAGPlusPlusCtrl.shouldShowErrorsPort(node)">\n                <div class="endpoint-circle endpoint-circle-bottom" ng-class="{\'disabled\': DAGPlusPlusCtrl.isDisabled}" ng-mouseup="DAGPlusPlusCtrl.selectEndpoint($event, node)" ng-attr-id="{{\'endpoint_\' + node.id + \'_error\'}}" data-nodeid="{{node.name}}" data-nodetype="error">\n                  <div class="endpoint-caret" ng-if="!DAGPlusPlusCtrl.isDisabled"></div>\n                </div>\n                <span>Error</span>\n              </div>\n            </div>\n            <div class="node-actions">\n              <span ng-if="DAGPlusPlusCtrl.nodeMenuOpen !== node.name" ng-class="{\'disabled\': DAGPlusPlusCtrl.isDisabled}" class="menu-icon menu-icon-node fa fa-bars float-xs-right" ng-click="!DAGPlusPlusCtrl.isDisabled && DAGPlusPlusCtrl.toggleNodeMenu(node, $event)" data-cy="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-toggle" data-testid="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-toggle">\n              </span>\n            </div>\n          </div>\n          <div ng-if="DAGPlusPlusCtrl.nodeMenuOpen === node.name" ng-click="$event.stopPropagation()" class="node-popover-menu">\n            <div class="menu-icon fa fa-bars" ng-click="DAGPlusPlusCtrl.toggleNodeMenu(node.name, $event)">\n            </div>\n            <div class="menu-content">\n              <div class="menu-content-action" ng-click="DAGPlusPlusCtrl.setPluginActiveForComment(node.id)" data-cy="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-comment" data-testid="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-comment">\n                Add Comment\n              </div>\n              <div class="menu-content-action" ng-click="DAGPlusPlusCtrl.onKeyboardCopy()" data-cy="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-copy" data-testid="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-copy">\n                Copy\n              </div>\n              <hr>\n              <div class="menu-content-action menu-content-delete" ng-click="DAGPlusPlusCtrl.deleteSelectedNodes()" data-cy="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-delete" data-testid="hamburgermenu-{{node.plugin.name}}-{{node.type}}-{{$index}}-delete">\n                Delete\n              </div>\n            </div>\n          </div>\n          <div ng-if="!DAGPlusPlusCtrl.isDisabled">\n            <plugin-context-menu node-id="\'{{node.id}}\'" get-plugin-configuration="DAGPlusPlusCtrl.getPluginConfiguration" get-selected-connections="DAGPlusPlusCtrl.getSelectedConnections" get-selected-nodes="DAGPlusPlusCtrl.getSelectedNodes" on-delete="DAGPlusPlusCtrl.deleteSelectedNodes" on-open="DAGPlusPlusCtrl.onPluginContextMenuOpen" on-add-comment="DAGPlusPlusCtrl.setPluginActiveForComment"></plugin-context-menu>\n          </div>\n        </div>\n      </div>\n      <div ng-if="!DAGPlusPlusCtrl.isDisabled">\n        <pipeline-context-menu on-wrangler-source-add="DAGPlusPlusCtrl.onPipelineContextMenuPaste" on-nodes-paste="DAGPlusPlusCtrl.onPipelineContextMenuPaste" pipeline-artifact-type="DAGPlusPlusCtrl.pipelineArtifactType" on-zoom-in="DAGPlusPlusCtrl.zoomIn" on-zoom-out="DAGPlusPlusCtrl.zoomOut" fit-to-screen="DAGPlusPlusCtrl.fitToScreen" pretty-print-graph="DAGPlusPlusCtrl.cleanUpGraph"></pipeline-context-menu>\n        <selection-box boundaries="DAGPlusPlusCtrl.selectionBox.boundaries" selectables="DAGPlusPlusCtrl.selectionBox.selectables" toggle-selection="DAGPlusPlusCtrl[\'selectionBox\'].toggle" on-selection-start="DAGPlusPlusCtrl.selectionBox.start" on-selection-move="DAGPlusPlusCtrl.selectionBox.move" on-selection-end="DAGPlusPlusCtrl.selectionBox.end"></selection-box>\n      </div>\n    </div>\n</div>\n\n<dag-minimap canvas-scale="DAGPlusPlusCtrl.scale" panning="DAGPlusPlusCtrl.setCanvasPanning(top, left)"></dag-minimap>\n'
      );
      $templateCache.put(
        'datetime-picker/datetime.html',
        '\n\n<div class="datetime-range">\n  <div>\n    <uib-datepicker ng-model="DatetimeController.date" datepicker-options="DatetimeController.options">\n    </uib-datepicker>\n  </div>\n\n  <div class="time-picker">\n    <div class="time-text">\n      <div class="text-center">\n        <input type="number" class="time-input hour" min="0" max="23" ng-model="DatetimeController.hour">\n        <span class="colon">:</span>\n        <input type="number" class="time-input minutes" min="0" max="59" ng-model="DatetimeController.minutes">\n      </div>\n    </div>\n\n    <div class="time-slider">\n      <div>\n        <label>Hour</label>\n        <input type="range" min="0" max="23" ng-model="DatetimeController.hour">\n      </div>\n      <div class="minutes-slider">\n        <label>Minutes</label>\n        <input type="range" min="0" max="59" ng-model="DatetimeController.minutes">\n      </div>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'datetime-range/datetime-range.html',
        '\n\n<div class="datetime-range" ng-class="{ \'open\': RangeController.startTimeOpen || RangeController.endTimeOpen }" ng-click="$event.stopPropagation()">\n  <div class="date-text-input text-center">\n    <div class="start-time datetime-input">\n      <span ng-click="RangeController.openStartTime()" ng-class="{ \'active\': RangeController.startTimeOpen }">\n        <span ng-if="dateRange.startTime">{{ dateRange.startTime | amDateFormat: \'MMM DD, YYYY  HH:mm\'}}</span>\n        <span ng-if="!dateRange.startTime">Start Time</span>\n      </span>\n    </div>\n    <span>to</span>\n    <div class="end-time datetime-input">\n      <span ng-click="RangeController.openEndTime()" ng-class="{ \'active\': RangeController.endTimeOpen }">\n        <span ng-if="dateRange.endTime">{{ dateRange.endTime | amDateFormat: \'MMM DD, YYYY  HH:mm\'}}</span>\n        <span ng-if="!dateRange.endTime">End Time</span>\n      </span>\n    </div>\n  </div>\n\n  <div>\n    <my-datetime-picker date-object="dateRange.startTime" max-date="dateRange.endTime" ng-click="$event.stopPropagation()" ng-if="RangeController.startTimeOpen">\n    </my-datetime-picker>\n\n    <my-datetime-picker date-object="dateRange.endTime" min-date="dateRange.startTime" ng-click="$event.stopPropagation()" ng-if="RangeController.endTimeOpen">\n    </my-datetime-picker>\n\n    <div class="footer-row text-center" ng-if="RangeController.startTimeOpen || RangeController.endTimeOpen">\n      <button class="btn btn-default btn-block done-button" ng-disabled="!dateRange.startTime || !dateRange.endTime || dateRange.startTime >= dateRange.endTime" ng-click="RangeController.done()">\n        Done\n      </button>\n    </div>\n  </div>\n\n</div>\n'
      );
      $templateCache.put(
        'fileselect/fileselect.html',
        ' \n\n\n<button class="btn btn-default" ng-class="buttonClass" ng-disabled="buttonDisabled" ng-if="!isDropdown">\n  <span class="fa {{buttonIcon}}"> </span>\n  <span> {{buttonLabel}} </span>\n</button>\n\n<a role="menuitem" ng-if="isDropdown">\n  <span class="fa {{buttonIcon}} pull-right"></span>\n  <span> {{ buttonLabel }} </span>\n</a>\n'
      );
      $templateCache.put(
        'group-side-panel/group-side-panel.html',
        '\n\n<div class="side-panel text-center left">\n  <div class="hydrator-filter text-left">\n    <input class="form-control" placeholder="Filter" type="text" ng-model="MySidePanel.searchText">\n    <div class="btn-group">\n      <div class="btn btn-default btn-sm" ng-class="{\'active\': MySidePanel.view === \'list\'}" ng-click="MySidePanel.view = \'list\'">\n        <span class="fa fa-list-ul"></span>\n      </div>\n      <div class="btn btn-default btn-sm" ng-class="{\'active\': MySidePanel.view === \'icon\'}" ng-click="MySidePanel.view = \'icon\'">\n        <span class="fa fa-th"></span>\n      </div>\n    </div>\n  </div>\n\n  <div class="groups-container">\n    <div class="item" ng-repeat="group in MySidePanel.groups track by $index" ng-click="MySidePanel.openedGroup = group.name" ng-style="MySidePanel.openedGroup === group.name && {height: MySidePanel.groupWrapperHeight}" ng-class="{\'item-open\': MySidePanel.openedGroup === group.name }" data-cy="plugin-{{group.name}}-group" data-testid="plugin-{{group.name}}-group">\n      <div class="text-left item-heading">\n        <span class="fa" ng-class="{\'fa-caret-down\': MySidePanel.openedGroup === group.name, \'fa-caret-right\': MySidePanel.openedGroup !== group.name}">\n        </span>\n        <span class="name">{{group.name}} </span>\n        <div class="pull-right">\n          <span class="badge">{{group.filtered.length}}</span>\n        </div>\n      </div>\n      <div class="item-body-wrapper" ng-show="MySidePanel.openedGroup === null || MySidePanel.openedGroup === group.name">\n        <div class="item-body" ng-class="{\'view-icon\': MySidePanel.view === \'icon\', \'view-list\': MySidePanel.view === \'list\'}">\n\n          \n          <div ng-if="MySidePanel.view === \'icon\'" ng-repeat="plugin in group.filtered = (MySidePanel.getFilteredPluginsFromGroup(group) | orderBy: \'pluginTemplate || name\') track by $index" class="plugin-item {{plugin.nodeClass}}" ng-class="{\'hovered\': plugin.hovering}" my-popover data-placement="right" data-template="plugin.template" content-data="plugin" data-popover-context="MySidePanel" ng-click="MySidePanel.onItemClicked($event, plugin)" data-cy="plugin-{{plugin.name}}-{{plugin.type}}" data-testid="plugin-{{plugin.name}}-{{plugin.type}}">\n\n            <div class="text-center fa icon-container" ng-if="MySidePanel.shouldShowCustomIcon(plugin)">\n              <img src="{{ MySidePanel.getCustomIconSrc(plugin) }}">\n            </div>\n\n            <div class="text-center fa {{plugin.icon}}" ng-if="!MySidePanel.shouldShowCustomIcon(plugin)">\n            </div>\n\n            <div class="name plugin-name">\n              {{ MySidePanel.generateLabel(plugin) }}\n            </div>\n\n            <div class="plugin-badge">T</div>\n          </div>\n          <div class="no-item-message" ng-if="group.filtered.length === 0">\n            <h4>No {{MySidePanel.itemGenericName}} found.</h4>\n          </div>\n\n          \n          <div ng-if="MySidePanel.view === \'list\'" ng-repeat="plugin in group.filtered = (MySidePanel.getFilteredPluginsFromGroup(group) | orderBy: \'pluginTemplate || name\') track by $index" class="plugin-item {{plugin.nodeClass}}" ng-click="MySidePanel.onItemClicked($event, plugin)" data-cy="plugin-{{plugin.name}}-{{plugin.type}}" data-testid="plugin-{{plugin.name}}-{{plugin.type}}">\n            <div class="text-center fa {{plugin.icon}}"></div>\n            <span class="name" my-popover data-placement="right" data-template="plugin.template" content-data="plugin" data-popover-context="MySidePanel">{{ MySidePanel.generateLabel(plugin) }}</span>\n            <span class="plugin-badge">T</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div ng-if="MySidePanel.groups.length === 0">\n      <h4>No {{MySidePanel.groupGenericName}} found.</h4>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'macro-widget-toggle/macro-widget-toggle.html',
        '\n\n<div class="form-group macro-widget-toggle" ng-class="{\'active\': MacroWidget.isMacro || MacroWidget.containsMacro }">\n  <label class="col-xs-3 control-label" ng-if="(MacroWidget.editorTypeWidgets.indexOf(MacroWidget.field[\'widget-type\']) === -1)" uib-tooltip="{{::MacroWidget.field.description}}" tooltip-placement="right" tooltip-append-to-body="true">\n    <span ng-class="{\'required\': MacroWidget.node._backendProperties[MacroWidget.field.name].required}">{{::MacroWidget.field.label}}</span>\n  </label>\n\n  <div ng-class="{\n        \'col-xs-8\': (MacroWidget.editorTypeWidgets.indexOf(MacroWidget.field[\'widget-type\']) === -1),\n        \'col-xs-11 code-editor\': (MacroWidget.editorTypeWidgets.indexOf(MacroWidget.field[\'widget-type\']) !== -1)\n      }">\n\n    <div class="form-input-attr" ng-if="!MacroWidget.isMacro">\n      \n      <fieldset ng-disabled="MacroWidget.otherAceEditorWidgets.indexOf(MacroWidget.field[\'widget-type\']) === -1 && MacroWidget.disabled" ng-if="(MacroWidget.editorTypeWidgets.indexOf(MacroWidget.field[\'widget-type\']) === -1)" ng-class="{\n          \'highlight-error\': !MacroWidget.node.warning &&\n              MacroWidget.node._backendProperties[MacroWidget.field.name].required &&\n              !MacroWidget.node.plugin.properties[MacroWidget.field.name]\n        }">\n        <div data-name="MacroWidget.field" class="my-widget-container" ng-class="{\'select-wrapper\': MacroWidget.field.widget === \'select\'}" data-model="MacroWidget.node.plugin.properties[MacroWidget.field.name]" data-myconfig="MacroWidget.field" disabled="MacroWidget.disabled" data-properties="MacroWidget.node.plugin.properties" widget-disabled="MacroWidget.node.pluginTemplate && MacroWidget.node.lock[MacroWidget.field.name]" input-schema="MacroWidget.node.inputSchema" stage-name="MacroWidget.node.plugin.label" is-field-required="MacroWidget.node._backendProperties[MacroWidget.field.name].required" node="MacroWidget.node" widget-container>\n        </div>\n      </fieldset>\n\n      \n      <div ng-if="(MacroWidget.editorTypeWidgets.indexOf(MacroWidget.field[\'widget-type\']) !== -1)">\n        <div data-name="MacroWidget.field" class="my-widget-container" ng-class="{\'select-wrapper\': MacroWidget.field.widget === \'select\'}" data-model="MacroWidget.node.plugin.properties[MacroWidget.field.name]" data-myconfig="MacroWidget.field" disabled="MacroWidget.disabled" data-properties="MacroWidget.node.plugin.properties" widget-disabled="MacroWidget.node.pluginTemplate && MacroWidget.node.lock[MacroWidget.field.name]" widget-container>\n        </div>\n      </div>\n    </div>\n\n\n    \n    <div class="form-input-attr" ng-if="MacroWidget.isMacro">\n\n      <fieldset ng-disabled="MacroWidget.disabled" ng-class="{\n          \'highlight-error\': !MacroWidget.node.warning &&\n              MacroWidget.node._backendProperties[MacroWidget.field.name].required &&\n              !MacroWidget.node.plugin.properties[MacroWidget.field.name]\n        }">\n        \n        <text-box id="macro-input-{{MacroWidget.field.name}}" value="MacroWidget.node.plugin.properties[MacroWidget.field.name]" on-change="MacroWidget.onChange"></text-box>\n      </fieldset>\n    </div>\n  </div>\n\n  <div class="col-xs-1 info-attr">\n\n    \n    <span class="macro-indicator fa-stack fa-sm" ng-class="{\'active\': MacroWidget.isMacro, \'disabled\': MacroWidget.disabled}" ng-if="MacroWidget.node._backendProperties[MacroWidget.field.name].macroSupported" uib-tooltip="A placeholder that will be substituted at runtime. eg. ${placeholder} or ${secure(key)}" tooltip-append-to-body="true" tooltip-popup-delay="300" tooltip-placement="left" tooltip-delay="300" ng-click="MacroWidget.toggleMacro()">\n      <span class="fa fa-stack-2x" ng-class="{\'fa-circle-thin\': !MacroWidget.isMacro, \'fa-circle\': MacroWidget.isMacro }"></span>\n      <span class="fa icon-M fa-stack-1x"></span>\n    </span>\n\n    <span class="text-danger fa fa-exclamation-triangle" uib-tooltip="{{MacroWidget.field.errorTooltip}}" tooltip-append-to-body="true" tooltip-placement="right" tooltip-class="error-tooltip error-node-config" ng-if="!MacroWidget.node.warning && MacroWidget.node._backendProperties[MacroWidget.field.name].required && !MacroWidget.node.plugin.properties[MacroWidget.field.name]">\n    </span>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'modified-tooltip/popover.html',
        '\n\n\n\n<div class="popover" tabindex="-1">\n  <div class="arrow"></div>\n  <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n  <div class="popover-content" ng-bind="content"></div>\n</div>\n'
      );
      $templateCache.put(
        'modified-tooltip/tooltip.html',
        '\n\n\n\n<div class="tooltip in" ng-show="title">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="title"></div>\n</div>\n'
      );
      $templateCache.put(
        'my-global-navbar/my-global-navbar.html',
        '\n\n<cask-header native-link="params.nativeLink"></cask-header>\n'
      );
      $templateCache.put(
        'my-link-button/my-link-button.html',
        '\n\n\n<span ng-repeat="dataset in MyLinkButtonCtrl.entities" class="my-link-button">\n  <fieldset ng-disabled="MyLinkButtonCtrl.disabled" title="{{MyLinkButtonCtrl.disabled ? \'Run the pipeline to view details\': \'\'}}">\n    <a class="btn btn-my-link" href="{{dataset.url}}">\n      <span>View metadata</span>\n    </a>\n  </fieldset>\n</span>\n'
      );
      $templateCache.put(
        'my-pipeline-resource/my-pipeline-resource.html',
        '\n<div class="resource-group row">\n  <span class="col-xs-4 control-label"> CPU </span>\n  <select class="small-dropdown form-control" ng-model="virtualCores" ng-options="core as core for core in cores" ng-change="onVirtualCoresChange()">\n  </select>\n</div>\n<div class="resource-group row">\n  <span class="col-xs-4 control-label"> Memory </span>\n  <my-number-widget ng-model="memoryMB" config="numberConfig"></my-number-widget>\n  <span class="control-label mb">MB</span>\n</div>\n'
      );
      $templateCache.put(
        'my-pipeline-runtime-args/my-pipeline-runtime-args.html',
        '\n\n<div class="step-content-heading">\n  Specify runtime arguments or update the ones derived from preferences\n  <div class="step-content-subtitle">\n    By default, values for all runtime arguments must be provided before running the pipeline. If a stage in your pipeline provides the value of an argument, you can skip that argument by marking it as provided.\n  </div>\n</div>\n<div class="runtime-arguments-values key-value-pair-values">\n  <key-value-pairs-material widget-props="{\n      \'key-placeholder\': \'Key\',\n      \'value-placeholder\': \'Value\',\n    }" data-cy="runtimeargs-preview" data-testid="runtimeargs-preview" on-change="RuntimeArgsCtrl.onRuntimeArgumentsChange" value="RuntimeArgsCtrl.runtimeArguments.pairs || []">\n  </key-value-pairs-material>\n</div>\n'
      );
      $templateCache.put(
        'my-pipeline-scheduler/my-pipeline-scheduler.html',
        '\n\n<pipeline-scheduler schedule="SchedulerCtrl.schedule" max-concurrent-runs="SchedulerCtrl.maxConcurrentRuns" action-creator="SchedulerCtrl.actionCreator" pipeline-name="SchedulerCtrl.pipelineName" on-close="SchedulerCtrl.onClose" open="true" suppress-animation="true" anchor-el="SchedulerCtrl.anchorEl">\n</pipeline-scheduler>\n'
      );
      $templateCache.put(
        'my-pipeline-summary/my-pipeline-summary.html',
        '\n<pipeline-summary pipeline-type="MyPipelineSummaryCtrl.pipelineType" namespace-id="MyPipelineSummaryCtrl.namespaceId" app-id="MyPipelineSummaryCtrl.appId" program-type="MyPipelineSummaryCtrl.programType" program-id="MyPipelineSummaryCtrl.programId" pipeline-config="MyPipelineSummaryCtrl.pipelineConfig" total-runs-count="MyPipelineSummaryCtrl.totalRunsCount" on-close="MyPipelineSummaryCtrl.onClose"> </pipeline-summary>\n'
      );
      $templateCache.put(
        'my-post-run-actions/my-post-run-actions.html',
        '\n<div ng-if="!MyPostRunActionsCtrl.actions.length">\n  <div class="well well-sm text-center empty-table" data-cy="post-run-alerts-create" ng-if="!MyPostRunActionsCtrl.isDisabled" ng-click="myPostRunActionWizardService.show(MyPostRunActionsCtrl.actionCreator, MyPostRunActionsCtrl.store, \'create\')">\n    <h1>+</h1>\n  </div>\n  <div class="well well-sm text-center empty-table disabled" ng-if="MyPostRunActionsCtrl.isDisabled">\n    <h2>No alerts configured for this pipeline</h2>\n  </div>\n</div>\n<div ng-if="MyPostRunActionsCtrl.actions.length" data-cy="saved-alerts">\n  <h2>Saved Alerts</h2>\n  <table class="table table-bordered">\n    <thead>\n      <tr>\n        <th>Alert</th>\n        <th>Event</th>\n        <th></th>\n        <th ng-if="!MyPostRunActionsCtrl.isDisabled"></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="action in MyPostRunActionsCtrl.actions">\n        <td>{{action.plugin.name}}</td>\n        <td>{{action.plugin.properties.runCondition}}</td>\n        <td ng-if="!MyPostRunActionsCtrl.isDisabled" class="text-center">\n          <a href="" ng-click="myPostRunActionWizardService.show(MyPostRunActionsCtrl.actionCreator, MyPostRunActionsCtrl.store, \'edit\', action)">\n            <span class="fa fa-pencil"></span>\n          </a>\n        </td>\n        <td ng-if="!MyPostRunActionsCtrl.isDisabled" class="text-center">\n          <a href ng-click="MyPostRunActionsCtrl.deletePostRunAction(action)">\n            <span class="fa text-danger fa-trash"></span>\n          </a>\n        </td>\n        <td ng-if="MyPostRunActionsCtrl.isDisabled" class="text-center">\n          <a href ng-click="myPostRunActionWizardService.show(MyPostRunActionsCtrl.actionCreator, MyPostRunActionsCtrl.store, \'view\', action)">\n            View\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class="well well-sm text-center" data-cy="post-run-alerts-create" ng-if="!MyPostRunActionsCtrl.isDisabled" ng-click="myPostRunActionWizardService.show(MyPostRunActionsCtrl.actionCreator, MyPostRunActionsCtrl.store, \'create\')">\n    <h1>+</h1>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'my-post-run-action-wizard/my-post-run-action-wizard-modal.html',
        '\n<div class="modal-header clearfix">\n  <h4 class="modal-title pull-left" ng-if="!action.name">\n    Alerts\n  </h4>\n  <h5 ng-if="action.name" class="modal-title pull-left">\n    <span>{{action.plugin.name || action.name}}</span>\n    <small>{{action.defaultArtifact.version || action.plugin.artifact.version}}</small>\n    <p>\n      <small>{{action.description}}</small>\n    </p>\n  </h5>\n  <span class="text-success" ng-if="errorCount === 0">No errors found.</span>\n  <span class="text-danger" ng-if="errorCount > 0">\n    <ng-pluralize count="errorCount" when="{\'1\': \'1 error found\',\n                         \'other\': \'{} errors found.\'}">\n    </ng-pluralize>\n  </span>\n  <div class="btn-group pull-right">\n    <button class="btn btn-primary validate-btn" data-cy="validate-btn" type="button" ng-if="showValidateButton()" ng-click="!validating && validatePluginProperties()">\n      <span ng-if="validating">\n        <span class="fa fa-spinner fa-spin"></span>\n      </span>\n      <span ng-if="!validating">Validate</span>\n    </button>\n    <a class="btn" ng-click="$close()">\n      <span class="fa fa-remove"></span>\n      <span class="sr-only"> Close </span>\n    </a>\n  </div>\n</div>\n<div class="modal-body config-modal">\n  <my-post-run-action-wizard mode="{{mode}}" action-creator="actionCreator" store="store" errors="propertyErrors" action="action" validate="validatePluginProperties">\n  </my-post-run-action-wizard>\n  <br>\n</div>\n'
      );
      $templateCache.put(
        'my-post-run-action-wizard/my-post-run-action-wizard.html',
        '\n<div class="wizard-nav" ng-if="MyPostRunActionWizardCtrl.mode !== \'view\'">\n  <div class="capsule" ng-class="{\'current\': MyPostRunActionWizardCtrl.currentStage === 1, \'complete\': MyPostRunActionWizardCtrl.currentStage > 1}">\n    <span class="badge">\n      <span ng-if="MyPostRunActionWizardCtrl.currentStage === 1">1</span>\n      <span class="fa fa-check" ng-if="MyPostRunActionWizardCtrl.currentStage > 1"></span>\n    </span>\n    <span class="nav-title">Select Alert</span>\n  </div>\n  <div class="line" ng-class="{\'complete\': MyPostRunActionWizardCtrl.currentStage > 1}"></div>\n  <div class="capsule" ng-class="{\'current\': MyPostRunActionWizardCtrl.currentStage === 2, \'complete\': MyPostRunActionWizardCtrl.currentStage > 2}">\n    <span class="badge">\n      <span ng-if="MyPostRunActionWizardCtrl.currentStage <= 2">2</span>\n      <span class="fa fa-check" ng-if="MyPostRunActionWizardCtrl.currentStage > 2"></span>\n    </span>\n    <span class="nav-title">Configure</span>\n  </div>\n  <div class="line" ng-class="{\'complete\': MyPostRunActionWizardCtrl.currentStage > 2}"></div>\n  <div class="capsule" ng-class="{\'current\': MyPostRunActionWizardCtrl.currentStage === 3}">\n    <span class="badge">\n      <span ng-if="MyPostRunActionWizardCtrl.currentStage <= 3">3</span>\n    </span>\n    <span class="nav-title">Confirm</span>\n  </div>\n</div>\n<wizard-select-action-step ng-if="MyPostRunActionWizardCtrl.currentStage === 1 && MyPostRunActionWizardCtrl.mode === \'create\'" store="MyPostRunActionWizardCtrl.store" on-action-select="MyPostRunActionWizardCtrl.onActionSelect">\n</wizard-select-action-step>\n<wizard-configure-confirm-step class="clearfix" mode="{{MyPostRunActionWizardCtrl.mode}}" action="MyPostRunActionWizardCtrl.selectedAction" errors="MyPostRunActionWizardCtrl.errors" ng-if="MyPostRunActionWizardCtrl.currentStage === 2" on-action-configure="MyPostRunActionWizardCtrl.onActionConfigure" on-goto-previous-step="MyPostRunActionWizardCtrl.goToPreviousStep">\n</wizard-configure-confirm-step>\n<wizard-configure-confirm-step mode="{{MyPostRunActionWizardCtrl.mode}}" is-disabled="true" class="clearfix" action="MyPostRunActionWizardCtrl.configuredAction" ng-if="MyPostRunActionWizardCtrl.currentStage === 3" on-action-configure="MyPostRunActionWizardCtrl.onActionConfirm" on-goto-previous-step="MyPostRunActionWizardCtrl.goToPreviousStep">\n</wizard-configure-confirm-step>\n'
      );
      $templateCache.put(
        'plugin-templates/plugin-templates.html',
        '\n<div class="modal-header clearfix">\n  <h3 class="modal-title pull-left">\n    <span ng-if="!PluginTemplatesCtrl.isEdit">\n      Create {{PluginTemplatesCtrl.pluginType}} plugin template\n    </span>\n    <span ng-if="PluginTemplatesCtrl.isEdit">\n      Edit {{PluginTemplatesCtrl.pluginConfig.pluginTemplate}} Template\n    </span>\n  </h3>\n  <div class="btn-group pull-right">\n    <a class="btn" ng-click="PluginTemplatesCtrl.cancel()">\n      <span class="fa fa-remove"></span>\n      <span class="sr-only"> Close </span>\n    </a>\n  </div>\n</div>\n<div class="modal-body plugin-template-modal-body">\n  <div class="form-content">\n    <div ng-if="PluginTemplatesCtrl.pluginType">\n      <label class="label-control">\n        <span>Choose Plugin</span>\n        <span class="fa fa-asterisk text-danger"></span>\n      </label>\n      <div class="select-wrapper">\n        <select ng-model="PluginTemplatesCtrl.pluginName" name="pluginList" ng-change="PluginTemplatesCtrl.onPluginSelect()" ng-if="!PluginTemplatesCtrl.prefill.pluginName" class="form-control" required>\n          <option ng-repeat="plugin in PluginTemplatesCtrl.pluginList" value="{{plugin}}">{{plugin}}</option>\n        </select>\n        <input class="form-control" ng-model="PluginTemplatesCtrl.pluginName" ng-if="PluginTemplatesCtrl.prefill.pluginName" disabled="disabled">\n      </div>\n      <div ng-if="!PluginTemplatesCtrl.prefill.pluginName && PluginTemplatesCtrl.pluginList.length === 0">\n        <h4>There is no plugin for this template</h4>\n      </div>\n    </div>\n\n    <div ng-if="PluginTemplatesCtrl.pluginVersions.length > 0">\n      <label class="label-control">\n        <span>Choose Version</span>\n        <span class="fa fa-asterisk text-danger"></span>\n      </label>\n      <div class="select-wrapper">\n        <select ng-model="PluginTemplatesCtrl.plugin" name="pluginVersionList" ng-change="PluginTemplatesCtrl.onPluginVersionSelect()" ng-options="plugin.artifact.version for plugin in PluginTemplatesCtrl.pluginVersions" class="form-control" required>\n        </select>\n      </div>\n    </div>\n\n    <div ng-if="PluginTemplatesCtrl.configFetched">\n      <h3>Plugin Properties</h3>\n\n      <label class="label-control">\n        <span>Template Name</span>\n        <span class="fa fa-asterisk text-danger"></span>\n        <span class="text-danger" ng-show="PluginTemplatesCtrl.missingTemplateName"> {{PluginTemplatesCtrl.GLOBALS.en.admin.templateNameMissingError}}</span>\n        <span class="text-danger" ng-if="PluginTemplatesCtrl.pluginTemplateNameError">\n          {{PluginTemplatesCtrl.pluginTemplateNameError}}\n        </span>\n      </label>\n      <input type="text" class="form-control" name="pluginTemplateName" ng-model="PluginTemplatesCtrl.pluginConfig.pluginTemplate" required>\n\n      <label class="label-control">Template Description</label>\n      <textarea class="form-control" ng-model="PluginTemplatesCtrl.pluginDescription"></textarea>\n\n      \n      <div ng-if="!PluginTemplatesCtrl.noConfig">\n        <div ng-repeat="group in PluginTemplatesCtrl.groupsConfig.groups">\n          <div class="widget-group-container">\n            <h5>{{::group.display}}</h5>\n            <div ng-repeat="field in group.fields">\n              <div ng-if="field.name !== PluginTemplatesCtrl.groupsConfig.outputSchema.schemaProperty" class="plugin-template-field-row">\n\n                <div class="form-group">\n                  <widget-wrapper plugin-property="PluginTemplatesCtrl.pluginConfig._backendProperties" widget-property="field" value="PluginTemplatesCtrl.pluginConfig.plugin.properties[field.name]" on-change="field.onChangeHandler"></widget-wrapper>\n                  <div>\n                    <label class="label-control">Lock change?</label>\n                    <input type="checkbox" ng-model="PluginTemplatesCtrl.pluginConfig.lock[field.name]">\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      \n      <div ng-if="PluginTemplatesCtrl.noConfig">\n        <div ng-repeat="(name, value) in PluginTemplatesCtrl.plugin.properties track by $index">\n          <div class="form-group">\n            <label class="control-label">\n              <span>{{name}}</span>\n              <span class="fa fa-info-circle" uib-tooltip="{{value.description}}" tooltip-placement="right" tooltip-append-to-body="true">\n              </span>\n              <span class="fa fa-asterisk" ng-if="value.required"></span>\n            </label>\n            <input type="text" class="form-control" ng-model="PluginTemplatesCtrl.pluginConfig.plugin.properties[name]">\n          </div>\n        </div>\n      </div>\n\n      <div ng-if="!PluginTemplatesCtrl.noConfig">\n        <div class="output-schema">\n          <h5>Output Schema</h5>\n\n          <fieldset ng-disabled="PluginTemplatesCtrl.isDisabled">\n            <my-output-schema schema-advance="false" node="PluginTemplatesCtrl.pluginConfig" groups-config="PluginTemplatesCtrl.groupsConfig" is-disabled="isDisabled">\n            </my-output-schema>\n\n          </fieldset>\n\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</div>\n<div class="modal-footer">\n  <div class="form-buttons text-right">\n    <button ng-click="PluginTemplatesCtrl.save()" class="btn btn-blue">\n      <span ng-if="!PluginTemplatesCtrl.isEdit">Add</span>\n      <span ng-if="PluginTemplatesCtrl.isEdit">Save</span>\n    </button>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'node-metrics/node-metrics.html',
        '\n\n<div class="metrics-content" ng-class="{\'disabled\': disabled}">\n  <a class="node-metrics-labels" ng-click="onClick($event, node)" ng-if="node.type !== \'splittertransform\'">\n    <span class="metric-records-out">\n      <span ng-if="node.type.indexOf(\'sink\') === -1">\n        <span ng-if="showLabels" class="metric-records-out-label">\n          Out\n        </span>\n        <span ng-bind="metricsData[node.name].recordsOut || \'0\' | commaSeparatedNumber"></span>\n      </span>\n      <span ng-if="node.type.indexOf(\'sink\') !== -1">\n        <span ng-if="showLabels" class="metric-records-out-label">\n          In\n        </span>\n        <span ng-bind="metricsData[node.name].recordsIn || \'0\' | commaSeparatedNumber"></span>\n      </span>\n      <span>/</span>\n    </span>\n    <span class="metric-errors">\n      <span ng-if="showLabels" class="metric-errors-label">\n        Errors\n      </span>\n      <span ng-bind="metricsData[node.name].recordsError || \'0\' | commaSeparatedNumber">\n      </span>\n    </span>\n  </a>\n  <a class="node-metrics-labels" ng-if="node.type === \'splittertransform\'">\n    <span class="metric-records-out" ng-if="portName" ng-click="onClick($event, node, portName)">\n      <span ng-if="showLabels" class="metric-records-out-label">\n        Out\n      </span>\n      <span ng-bind="metricsData[node.name].recordsOut[portName] || \'0\' | commaSeparatedNumber"></span>\n    </span>\n    <span class="metric-errors" ng-if="!portName" ng-click="onClick($event, node)">\n      <span ng-if="showLabels" class="metric-errors-label">\n        Errors\n      </span>\n      <span ng-bind="metricsData[node.name].recordsError || \'0\' | commaSeparatedNumber">\n      </span>\n    </span>\n  </a>\n</div>\n'
      );
      $templateCache.put(
        'validators/validators.html',
        '\n\n\n<fieldset ng-disabled="isDisabled">\n  <div class="form-group">\n    <label class="control-label">\n      Label\n      <span class="fa fa-asterisk"></span>\n      <small class="text-danger" ng-if="ValidatorsCtrl.nodeLabelError">{{ValidatorsCtrl.nodeLabelError}}</small>\n    </label>\n    <input type="text" class="form-control" ng-model="model.label">\n  </div>\n\n  <div class="row">\n\n    \n    <div class="col-xs-3">\n      <div class="panel panel-default">\n        <div class="panel-heading">\n          <div class="panel-title">\n            Fields\n          </div>\n        </div>\n        <div class="panel-body">\n          <div class="list-group">\n            <a href="" class="list-group-item" ng-repeat="field in inputSchema.fields" ng-click="!isDisabled && ValidatorsCtrl.addFieldGroup(field.name)" uib-tooltip="{{::field.name}}" tooltip-enable="field.name.length > 30" tooltip-placement="right" tooltip-append-to-body="true">\n              {{field.name | myEllipsis: 30}}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    \n    <div class="col-xs-9">\n      <div class="panel panel-default">\n        <div class="panel-heading">\n          <div class="panel-title">\n            <span>Rules</span>\n            <span class="pull-right" ng-click="ValidatorsCtrl.isRule = !ValidatorsCtrl.isRule">\n              <i class="fa fa-code" ng-if="ValidatorsCtrl.isRule"></i>\n              <i class="fa fa-list" ng-if="!ValidatorsCtrl.isRule"></i>\n            </span>\n\n\n          </div>\n        </div>\n\n        <div class="panel-body" ng-if="ValidatorsCtrl.isRule">\n\n          <div class="panel panel-default panel-nested" ng-repeat="(key, value) in ValidatorsCtrl.validationFields">\n            <div class="panel-heading">\n              <div class="panel-title">\n                <span>{{ key }}</span>\n                <i class="fa fa-times pull-right" ng-click="!isDisabled && ValidatorsCtrl.removeFieldGroup(key)"></i>\n              </div>\n            </div>\n\n            <div class="panel-body">\n              <div class="row" ng-repeat="rule in value">\n                <div class="rule-box">\n\n                  <div class="onoffswitch">\n                    \n                    <div ng-if="!$first">\n                      <input type="checkbox" name="onoffswitch-{{key}}{{rule}}{{$index}}" class="onoffswitch-checkbox" id="myonoffswitch-{{key}}{{rule}}{{$index}}" ng-model="rule.operation">\n                      <label class="onoffswitch-label" for="myonoffswitch-{{key}}{{rule}}{{$index}}">\n                          <span class="onoffswitch-inner"></span>\n                          <span class="onoffswitch-switch"></span>\n                      </label>\n                    </div>\n                  </div>\n\n                  <div class="main-rule">\n                    <div class="select-wrapper">\n                      <select class="form-control" ng-options="validator.validationKey as validator.displayName for validator in ValidatorsCtrl.validators" ng-model="rule.validation"></select>\n                    </div>\n                  </div>\n\n                  <div class="rule-arguments" ng-if="ValidatorsCtrl.functionMap[rule.validation].arguments.length > 1 && !argument.startsWith(\'<field:1>\')" ng-repeat="argument in ValidatorsCtrl.functionMap[rule.validation].arguments">\n                    <div ng-if="!argument.startsWith(\'<field:1>\') && !argument.startsWith(\'<field:\')">\n                      <input type="text" class="form-control" ng-model="rule.arguments[argument]" placeholder="{{argument}}">\n                    </div>\n                    <div ng-if="!argument.startsWith(\'<field:1>\') && argument.startsWith(\'<field:\')">\n                      <div class="select-wrapper">\n                        <select class="form-control" ng-model="rule.arguments[argument]">\n                          <option value="" disabled="disabled" selected="selected">{{ argument }}</option>\n                          <option ng-repeat="schema in inputSchema" value="input.{{schema.name}}">\n                            {{schema.name}}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class="trash">\n                    <button class="btn btn-danger pull-right" ng-click="ValidatorsCtrl.removeRule(key, rule)">\n                      <i class="fa fa-trash"></i>\n                    </button>\n                  </div>\n                </div>\n\n              </div>\n\n              <div class="row add-rule">\n                <button class="btn btn-default" ng-click="ValidatorsCtrl.addRule(key)">\n                  <i class="fa fa-plus"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <div class="panel-body" ng-if="!ValidatorsCtrl.isRule">\n          <fieldset disabled="disabled">\n            <div my-ace-editor ng-model="model.properties.validationScript"></div>\n          </fieldset>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="row error-dataset">\n    <div class="col-xs-12">\n      <label class="label-control">\n        Error Dataset\n        <span class="fa fa-info-circle" uib-tooltip="Dataset that stores invalid records that has failed the validation." tooltip-placement="right"></span>\n      </label>\n      <input type="text" class="form-control" ng-model="errorDatasetName">\n    </div>\n  </div>\n</fieldset>\n'
      );
      $templateCache.put(
        'timestamp-picker/datetime.html',
        ' \n\n<div class="input-group">\n  <span class="input-group-addon">\n    <span class="fa fa-calendar"></span>\n    <span class="addon-label" ng-bind="label"></span>\n  </span>\n  <input type="text" class="form-control" placeholder="Date" ng-model="timestamp" data-autoclose="1" data-date-type="number" bs-datepicker>\n  <input type="text" class="form-control last-child" placeholder="Time" ng-model="timestamp" data-autoclose="1" data-time-type="number" bs-timepicker>\n</div>\n'
      );
      $templateCache.put(
        'splitter-popover/splitter-popover.html',
        '\n\n<div class="arrow"></div>\n<div class="popover-content">\n  <div ng-repeat="port in SplitterPopoverCtrl.ports" class="splitter-popover-row">\n    <span class="port-name">{{ port.name }}</span>\n    <div class="endpoint-circle" ng-class="[\'endpoint_{{node.id || node.name}}_port_{{port.name}}\', {\'disabled\': isDisabled}]" ng-attr-id="{{\'endpoint_\' + node.id + \'_port_\' + port.name }}" data-nodeid="{{node.name || node.plugin.label}}" data-nodetype="splitter" data-portname="{{port.name}}">\n      <div class="endpoint-caret" ng-if="!isDisabled"></div>\n    </div>\n    <div class="port-metrics" ng-if="isDisabled">\n      <my-node-metrics on-click="onMetricsClick" node="node" disabled="disableMetricsClick" metrics-data="metricsData" port-name="port.name">\n      </my-node-metrics>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'complex-schema/embedded-schema-selector/embedded-schema-selector.html',
        '\n\n<div>\n  <div ng-if="Embedded.checkComplexType(Embedded.displayType)" class="tab-toggle" ng-class="{\'expanded\': Embedded.expanded}">\n    <span class="fa fa-caret-down" ng-if="Embedded.expanded" ng-click="Embedded.expanded = false"></span>\n    <span class="fa fa-caret-right" ng-if="!Embedded.expanded" ng-click="Embedded.expanded = true"></span>\n  </div>\n  <div class="clearfix" ng-if="Embedded.expanded" ng-switch="Embedded.displayType">\n    <div class="col-xs-12" ng-switch-when="enum">\n      <my-enum-schema-wrapper ng-model="Embedded.type" parent-format-output="Embedded.parentFormatOutput()" is-disabled="Embedded.isDisabled">\n      </my-enum-schema-wrapper>\n    </div>\n\n    <div class="col-xs-12" ng-switch-when="array">\n      <my-array-schema-wrapper ng-model="Embedded.type" parent-format-output="Embedded.parentFormatOutput()" is-disabled="Embedded.isDisabled">\n      </my-array-schema-wrapper>\n    </div>\n\n    <div class="col-xs-12" ng-switch-when="map">\n      <my-map-schema-wrapper ng-model="Embedded.type" parent-format-output="Embedded.parentFormatOutput()" is-disabled="Embedded.isDisabled">\n      </my-map-schema-wrapper>\n    </div>\n\n    <div class="col-xs-12" ng-switch-when="union">\n      <my-union-schema-wrapper ng-model="Embedded.type" parent-format-output="Embedded.parentFormatOutput()" is-disabled="Embedded.isDisabled">\n      </my-union-schema-wrapper>\n    </div>\n\n    <div class="col-xs-12" ng-switch-when="record">\n      <my-record-schema ng-model="Embedded.type" parent-format-output="Embedded.parentFormatOutput()" is-disabled="Embedded.isDisabled" type-index="Embedded.index">\n      </my-record-schema>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'complex-schema/array-schema/array-schema.html',
        '\n\n<div class="array-schema-container">\n  <div class="error" ng-if="ArraySchema.error">\n    {{ ArraySchema.error }}\n  </div>\n\n  <fieldset ng-disabled="ArraySchema.isDisabled">\n    <div class="clearfix">\n      <div class="input-column select-only no-type" ng-class="{ \'tab-header\': ArraySchema.items.nested }">\n        <div class="tab-header-inner">\n          <div class="select-wrapper">\n            <select class="form-control" title="{{ ArraySchema.items.displayType }}" ng-model="ArraySchema.items.displayType" ng-options="option as option for option in ArraySchema.SCHEMA_TYPES" ng-change="ArraySchema.changeType()">\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div class="fields-actions">\n        <div class="checkbox no-trash text-center">\n          <input type="checkbox" ng-model="ArraySchema.items.nullable" ng-change="ArraySchema.formatOutput()">\n        </div>\n      </div>\n    </div>\n  </fieldset>\n\n  <my-embedded-schema-selector type="ArraySchema.items.type" display-type="ArraySchema.items.displayType" parent-format-output="ArraySchema.formatOutput()" is-disabled="ArraySchema.isDisabled">\n  </my-embedded-schema-selector>\n</div>\n'
      );
      $templateCache.put(
        'complex-schema/enum-schema/enum-schema.html',
        '\n\n<div class="enum-schema-container">\n  <div class="error" ng-if="EnumSchema.error">\n    {{ EnumSchema.error }}\n  </div>\n  <fieldset ng-disabled="EnumSchema.isDisabled">\n    <div class="clearfix" ng-repeat="symbol in EnumSchema.symbols track by $index">\n      <div class="input-column no-type">\n        <input type="text" id="{{ symbol.id }}" class="form-control" title="{{ symbol.name }}" ng-model="symbol.name" ng-blur="EnumSchema.formatOutput()" ng-keypress="$event.keyCode === 13 && EnumSchema.addSymbol($index)" placeholder="Symbol Name">\n      </div>\n      <div class="fields-actions" ng-if="!EnumSchema.isDisabled">\n        <div class="actions-buttons no-checkbox text-right">\n          <button class="btn btn-link" ng-click="EnumSchema.removeSymbol($index)" ng-if="EnumSchema.symbols.length > 1">\n            <i class="text-danger fa fa-trash"></i>\n          </button>\n          <button class="btn btn-link" ng-click="EnumSchema.addSymbol($index)">\n            <i class="fa fa-plus"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</div>\n'
      );
      $templateCache.put(
        'complex-schema/map-schema/map-schema.html',
        '\n\n<div class="map-schema-container">\n  <div class="error" ng-if="MapSchema.error">\n    {{ MapSchema.error }}\n  </div>\n\n  <div class="key-field clearfix">\n    <fieldset ng-disabled="MapSchema.isDisabled">\n      <div class="map-input-group" ng-class="{ \'tab-header\': MapSchema.fields.keys.nested }">\n        <div class="tab-header-inner">\n          <div class="map-fields pull-left">\n            Key:\n          </div>\n          <div class="map-input-column select-only">\n            <div class="select-wrapper">\n              <select class="form-control" ng-model="MapSchema.fields.keys.displayType" ng-options="option as option for option in MapSchema.SCHEMA_TYPES" ng-change="MapSchema.changeType(MapSchema.fields.keys)">\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="fields-actions">\n        <div class="checkbox no-trash text-center">\n          <input type="checkbox" ng-model="MapSchema.fields.keys.nullable" ng-change="MapSchema.formatOutput()">\n        </div>\n      </div>\n    </fieldset>\n  </div>\n\n  <my-embedded-schema-selector type="MapSchema.fields.keys.type" display-type="MapSchema.fields.keys.displayType" parent-format-output="MapSchema.formatOutput()" is-disabled="MapSchema.isDisabled">\n  </my-embedded-schema-selector>\n\n\n  <div class="value-field clearfix">\n    <fieldset ng-disabled="MapSchema.isDisabled">\n      <div class="map-input-group" ng-class="{ \'tab-header\': MapSchema.fields.values.nested }">\n        <div class="tab-header-inner">\n          <div class="map-fields pull-left">\n            Value:\n          </div>\n          <div class="map-input-column select-only">\n            <div class="select-wrapper">\n              <select class="form-control" ng-model="MapSchema.fields.values.displayType" ng-options="option as option for option in MapSchema.SCHEMA_TYPES" ng-change="MapSchema.changeType(MapSchema.fields.values)">\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="fields-actions">\n        <div class="checkbox no-trash text-center">\n          <input type="checkbox" ng-model="MapSchema.fields.values.nullable" ng-change="MapSchema.formatOutput()">\n        </div>\n      </div>\n    </fieldset>\n  </div>\n\n  <my-embedded-schema-selector type="MapSchema.fields.values.type" display-type="MapSchema.fields.values.displayType" parent-format-output="MapSchema.formatOutput()" is-disabled="MapSchema.isDisabled">\n  </my-embedded-schema-selector>\n</div>\n'
      );
      $templateCache.put(
        'complex-schema/union-schema/union-schema.html',
        '\n\n<div class="union-schema-container">\n  <div class="error" ng-if="UnionSchema.error">\n    {{ UnionSchema.error }}\n  </div>\n\n  <fieldset ng-disabled="UnionSchema.isDisabled">\n    <div class="item" ng-repeat="item in UnionSchema.types track by $index">\n      <div class="clearfix">\n        <div class="input-column select-only no-type" ng-class="{ \'tab-header\': item.nested }">\n          <div class="tab-header-inner">\n            <div class="select-wrapper">\n              <select class="form-control" ng-model="item.displayType" title="{{ item.displayType }}" ng-options="option as option for option in UnionSchema.SCHEMA_TYPES" ng-change="UnionSchema.changeType(item, \'{{item.displayType}}\')">\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class="fields-actions">\n          <div class="checkbox text-center">\n            <input type="checkbox" ng-model="item.nullable" ng-change="UnionSchema.formatOutput()">\n          </div>\n\n          <div class="actions-buttons text-right" ng-if="!UnionSchema.isDisabled">\n            <button class="btn btn-link" ng-click="UnionSchema.removeType($index)" ng-if="UnionSchema.types.length > 1">\n              <i class="text-danger fa fa-trash"></i>\n            </button>\n            <button class="btn btn-link" ng-click="UnionSchema.addType($index)">\n              <i class="fa fa-plus"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <my-embedded-schema-selector type="item.type" display-type="item.displayType" index="item.index" parent-format-output="UnionSchema.formatOutput()" is-disabled="UnionSchema.isDisabled">\n      </my-embedded-schema-selector>\n    </div>\n  </fieldset>\n</div>\n'
      );
      $templateCache.put(
        'my-pipeline-configurations/my-batch-pipeline-config/my-batch-pipeline-config.html',
        '\n\n<div class="pipeline-configurations-content modeless-container">\n  <div class="pipeline-configurations-header modeless-header">\n    <div class="modeless-title">\n      Configure\n      <span ng-if="BatchPipelineConfigCtrl.pipelineName.length > 0">\n        "{{BatchPipelineConfigCtrl.pipelineName}}"\n      </span>\n    </div>\n    <div class="btn-group">\n      <a class="btn" ng-click="BatchPipelineConfigCtrl.onClose()">\n        <span class="fa fa-remove"></span>\n      </a>\n    </div>\n  </div>\n  <div class="pipeline-configurations-body modeless-content">\n    <div class="configurations-side-panel">\n      <div class="configurations-tabs">\n        <div class="configuration-tab" ng-class="{\'active\': BatchPipelineConfigCtrl.activeTab === \'runtimeArgs\'}" ng-click="BatchPipelineConfigCtrl.activeTab = \'runtimeArgs\'" ng-if="BatchPipelineConfigCtrl.isDeployed || BatchPipelineConfigCtrl.showPreviewConfig">\n          Runtime arguments\n        </div>\n        <div class="configuration-tab" ng-class="{\'active\': BatchPipelineConfigCtrl.activeTab === \'previewConfig\'}" ng-click="BatchPipelineConfigCtrl.activeTab = \'previewConfig\'" ng-if="!BatchPipelineConfigCtrl.isDeployed && BatchPipelineConfigCtrl.showPreviewConfig">\n          Preview config\n        </div>\n        <div class="configuration-tab toggle-advanced-options" ng-click="BatchPipelineConfigCtrl.showAdvanced = !BatchPipelineConfigCtrl.showAdvanced" ng-if="BatchPipelineConfigCtrl.isDeployed || BatchPipelineConfigCtrl.showPreviewConfig">\n          <span class="fa" ng-class="{\'fa-caret-down\': BatchPipelineConfigCtrl.showAdvanced, \'fa-caret-right\': !BatchPipelineConfigCtrl.showAdvanced}">\n          </span>\n          Advanced options\n        </div>\n        <div class="advanced-options" ng-show="BatchPipelineConfigCtrl.showAdvanced || !BatchPipelineConfigCtrl.isDeployed && !BatchPipelineConfigCtrl.showPreviewConfig">\n          <div class="configuration-tab" ng-class="{\'active\': BatchPipelineConfigCtrl.activeTab === \'pipelineConfig\'}" ng-click="BatchPipelineConfigCtrl.activeTab = \'pipelineConfig\'">\n            Pipeline config\n          </div>\n          <div class="configuration-tab" ng-class="{\'active\': BatchPipelineConfigCtrl.activeTab === \'engineConfig\'}" ng-click="BatchPipelineConfigCtrl.activeTab = \'engineConfig\'" data-cy="pipeline-configure-engine-tab">\n            Engine config\n          </div>\n          <div class="configuration-tab" ng-class="{\'active\': BatchPipelineConfigCtrl.activeTab === \'resources\', \'disabled\': BatchPipelineConfigCtrl.showPreviewConfig}" ng-click="BatchPipelineConfigCtrl.activeTab = \'resources\'" data-cy="pipeline-configure-resources-tab">\n            Resources\n          </div>\n          <div class="configuration-tab" ng-class="{\'active\': BatchPipelineConfigCtrl.activeTab === \'alerts\', \'disabled\': BatchPipelineConfigCtrl.showPreviewConfig}" ng-click="BatchPipelineConfigCtrl.activeTab = \'alerts\'" data-cy="pipeline-configure-alerts-tab">\n            Pipeline alert\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="configuration-content">\n      <div class="configuration-step-content configuration-content-container" id="runtime-arguments-tab-content" ng-if="BatchPipelineConfigCtrl.activeTab === \'runtimeArgs\'">\n        <my-pipeline-runtime-args runtime-arguments="BatchPipelineConfigCtrl.runtimeArguments" contains-macros="BatchPipelineConfigCtrl.containsMacros" resolved-macros="BatchPipelineConfigCtrl.resolvedMacros">\n        </my-pipeline-runtime-args>\n      </div>\n\n      <div class="configuration-step-content configuration-content-container batch-content" id="preview-config-tab-content" ng-if="BatchPipelineConfigCtrl.activeTab === \'previewConfig\'">\n        <div class="step-content-heading">\n          Set the number of records to preview\n        </div>\n        <div class="label-with-toggle num-records-preview row">\n          <span class="toggle-label col-xs-5">Number of records to preview</span>\n          <div class="col-xs-7 num-preview-input-col">\n            <div class="toggle-container">\n                <my-number-widget class="num-records-input" ng-model="BatchPipelineConfigCtrl.numRecordsPreview" config="BatchPipelineConfigCtrl.numberConfig"></my-number-widget>\n              <i class="fa fa-info-circle" uib-tooltip="The number of records to be read during the pipeline preview. For MapReduce, this translates to the number of records that are read by each map task." tooltip-placement="right"></i>\n            </div>\n            <span class="num-preview-info">\n              Max up to {{BatchPipelineConfigCtrl.numberConfig[\'widget-attributes\'].max}} records\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class="configuration-step-content" id="pipeline-config-tab-content" ng-if="BatchPipelineConfigCtrl.activeTab === \'pipelineConfig\'">\n        <div class="step-content-heading">\n          Set configurations for this pipeline\n        </div>\n        <div class="label-with-toggle instrumentation row">\n          <span class="toggle-label col-xs-4">Instrumentation</span>\n          <div class="col-xs-7 toggle-container">\n            <toggle-switch is-on="BatchPipelineConfigCtrl.instrumentation" on-toggle="BatchPipelineConfigCtrl.onToggleInstrumentationChange"></toggle-switch>\n            <i class="fa fa-info-circle" uib-tooltip="Emits timing metrics such as total time, mean, standard deviation for pipeline stages. It is recommended to always have this setting on, unless the environment is short on resources." tooltip-placement="right">\n            </i>\n          </div>\n        </div>\n      </div>\n      <div class="configuration-step-content batch-content" id="resources-tab-content" ng-if="BatchPipelineConfigCtrl.activeTab === \'resources\'">\n        <div class="step-content-heading">\n          Specify the resources for the following processes of the {{ BatchPipelineConfigCtrl.engineForDisplay }} program\n        </div>\n        <div class="col-xs-6 driver" data-cy="resources-config-tab-driver">\n          <span class="resource-title">\n            Driver\n          </span>\n          <i class="fa fa-info-circle" uib-tooltip="Resources for the driver process which initializes the pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="BatchPipelineConfigCtrl.actionCreator" store="BatchPipelineConfigCtrl.store" resource-type="driverResource" on-memory-change="BatchPipelineConfigCtrl.onDriverMemoryChange" on-core-change="BatchPipelineConfigCtrl.onDriverCoreChange" virtual-cores-value="BatchPipelineConfigCtrl.driverResources.virtualCores" memory-mb-value="BatchPipelineConfigCtrl.driverResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n        <div class="col-xs-6 executor" data-cy="resources-config-tab-executor">\n          <span ng-if="BatchPipelineConfigCtrl.engine === \'mapreduce\'" class="resource-title">\n            Mapper/Reducer\n          </span>\n          <span ng-if="BatchPipelineConfigCtrl.engine === \'spark\'" class="resource-title">\n            Executor\n          </span>\n          <i class="fa fa-info-circle" ng-if="BatchPipelineConfigCtrl.engine === \'mapreduce\'" uib-tooltip="Resources for Map and Reduce Tasks of the MapReduce program" tooltip-placement="right">\n          </i>\n          <i class="fa fa-info-circle" ng-if="BatchPipelineConfigCtrl.engine === \'spark\'" uib-tooltip="Resources for executor processes which run tasks in an Apache Spark pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="BatchPipelineConfigCtrl.actionCreator" store="BatchPipelineConfigCtrl.store" resource-type="executorResource" on-memory-change="BatchPipelineConfigCtrl.onExecutorMemoryChange" on-core-change="BatchPipelineConfigCtrl.onExecutorCoreChange" virtual-cores-value="BatchPipelineConfigCtrl.executorResources.virtualCores" memory-mb-value="BatchPipelineConfigCtrl.executorResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n      </div>\n      <div class="configuration-step-content" id="alerts-tab-content" ng-if="BatchPipelineConfigCtrl.activeTab === \'alerts\'">\n        <div class="step-content-heading">\n          Set alerts for your batch pipeline\n        </div>\n        <my-post-run-actions is-disabled="BatchPipelineConfigCtrl.isDeployed" action-creator="BatchPipelineConfigCtrl.actionCreator" store="BatchPipelineConfigCtrl.store">\n        </my-post-run-actions>\n      </div>\n\n      <div ng-class="[\'configuration-step-content\',  \'configuration-content-container\',  \'batch-content\', {\'allow-force-dynamic-execution\': BatchPipelineConfigCtrl.allowForceDynamicExecution}]" id="engine-config-tab-content" ng-if="BatchPipelineConfigCtrl.activeTab === \'engineConfig\'">\n        <fieldset ng-if="!BatchPipelineConfigCtrl.allowForceDynamicExecution" ng-disabled="BatchPipelineConfigCtrl.isDeployed">\n          <div class="step-content-heading">\n            Select the type of engine running your batch pipeline\n          </div>\n          <div class="engine-config-radio">\n            <label class="radio-inline radio-spark">\n              <input type="radio" ng-model="BatchPipelineConfigCtrl.engine" ng-change="BatchPipelineConfigCtrl.onEngineChange()" value="spark" data-cy="engine-config-tab-spark">\n              Spark\n            </label>\n            <label class="radio-inline radio-mapReduce">\n              <input type="radio" ng-model="BatchPipelineConfigCtrl.engine" ng-change="BatchPipelineConfigCtrl.onEngineChange()" value="mapreduce" data-cy="engine-config-tab-mapreduce">\n              <i class="fa fa-exclamation-triangle" uib-tooltip="MapReduce is deprecated." tooltip-placement="right">\n              </i>\n              <span class="deprecated-warning">[Deprecated]</span>\n              MapReduce\n            </label>\n          </div>\n        </fieldset>\n        <div ng-if="BatchPipelineConfigCtrl.allowForceDynamicExecution">\n          <label for="force-dynamic-execution" class="step-content-heading">Dynamic Execution</label>\n          <select name="force-dynamic-execution" id="force-dynamic-execution" class="form-control dynamic-execution-select" ng-model="BatchPipelineConfigCtrl.forceDynamicExecution" ng-change="BatchPipelineConfigCtrl.onForceDynamicEngineChange()">\n            <option value="">Cluster Default</option>\n            <option value="forceOn">Force On</option>\n            <option value="forceOff">Force Off</option>\n          </select>\n          <div ng-if="BatchPipelineConfigCtrl.showNumOfExecutors" class="label-with-toggle numExecutors form-group row dynamic-execution-option">\n            <span class="toggle-label col-xs-4">Number of executors</span>\n            <div class="col-xs-7">\n              <select class="form-control small-dropdown" ng-model="BatchPipelineConfigCtrl.numExecutors" ng-options="option as option for option in BatchPipelineConfigCtrl.numExecutorsOptions">\n              </select>\n              <i class="fa fa-info-circle" uib-tooltip="The number of executors to allocate for this pipeline on Apache Yarn." tooltip-placement="right">\n              </i>\n            </div>\n          </div>\n        </div>\n        <div class="add-custom-config">\n          <span ng-if="!BatchPipelineConfigCtrl.isDeployed">\n            <a class="add-custom-config-label" ng-click="BatchPipelineConfigCtrl.showCustomConfig = !BatchPipelineConfigCtrl.showCustomConfig">\n                <span class="fa" ng-class="{\'fa-caret-down\': BatchPipelineConfigCtrl.showCustomConfig, \'fa-caret-right\': !BatchPipelineConfigCtrl.showCustomConfig}" data-cy="engine-config-tab-custom">\n                 </span>\n                Show Custom Config\n            </a>\n            <i class="fa fa-info-circle" uib-tooltip="Enter key-value pairs of configuration parameters that will be passed to the underlying {{ BatchPipelineConfigCtrl.engineForDisplay }} program." tooltip-placement="right">\n            </i>\n            <span class="float-xs-right num-rows" ng-if="BatchPipelineConfigCtrl.showCustomConfig">\n                {{ BatchPipelineConfigCtrl.numOfCustomEngineConfigFilled() }}\n              <ng-pluralize count="BatchPipelineConfigCtrl.numOfCustomEngineConfigFilled()" when="{\'one\': \'custom config\',\n                      \'other\': \'custom configs\'}">\n              </ng-pluralize>\n            </span>\n          </span>\n          <span ng-if="(BatchPipelineConfigCtrl.isDeployed) || (!BatchPipelineConfigCtrl.isDeployed && BatchPipelineConfigCtrl.showCustomConfig)">\n            <hr>\n            <span ng-if="BatchPipelineConfigCtrl.isDeployed">\n              <label>Custom config</label>\n              <i class="fa fa-info-circle" uib-tooltip="Enter key-value pairs of configuration parameters that will be passed to the underlying {{ BatchPipelineConfigCtrl.engineForDisplay }} program." tooltip-placement="right">\n              </i>\n              <span class="float-xs-right num-rows">\n                  {{ BatchPipelineConfigCtrl.customEngineConfig.pairs.length }}\n                <ng-pluralize count="BatchPipelineConfigCtrl.customEngineConfig.pairs.length" when="{\'one\': \'custom config\',\n                        \'other\': \'custom configs\'}">\n                </ng-pluralize>\n              </span>\n            </span>\n            <div class="custom-config-labels key-value-pair-labels">\n              <span class="key-label">Name</span>\n              <span class="value-label">Value</span>\n            </div>\n            <div class="custom-config-values key-value-pair-values">\n              <key-value-pairs key-values="BatchPipelineConfigCtrl.customEngineConfig" on-key-value-change="BatchPipelineConfigCtrl.onCustomEngineConfigChange"></key-value-pairs>\n            </div>\n          </span>\n        </div>\n      </div>\n\n      <div class="configuration-step-navigation">\n        <div class="apply-action-container" ng-if="BatchPipelineConfigCtrl.isDeployed || BatchPipelineConfigCtrl.showPreviewConfig">\n          <button class="btn btn-primary apply-action" ng-if="BatchPipelineConfigCtrl.isDeployed" ng-disabled="BatchPipelineConfigCtrl.buttonsAreDisabled() || BatchPipelineConfigCtrl.startingPipeline || BatchPipelineConfigCtrl.updatingPipeline" ng-click="BatchPipelineConfigCtrl.applyAndRunPipeline()">\n            <span>Save &amp; {{ BatchPipelineConfigCtrl.pipelineAction }}</span>\n            <span ng-if="BatchPipelineConfigCtrl.startingPipeline" class="fa fa-spinner fa-spin"></span>\n          </button>\n          <button data-cy="preview-configure-run-btn" data-testid="preview-configure-run-btn" class="btn btn-primary apply-action" ng-if="BatchPipelineConfigCtrl.showPreviewConfig" ng-disabled="BatchPipelineConfigCtrl.buttonsAreDisabled()" ng-click="BatchPipelineConfigCtrl.applyAndRunPipeline()">\n            <span>Run</span>\n          </button>\n          <button class="btn btn-secondary" ng-if="BatchPipelineConfigCtrl.isDeployed && BatchPipelineConfigCtrl.activeTab === \'runtimeArgs\'" ng-disabled="BatchPipelineConfigCtrl.buttonsAreDisabled()" ng-click="BatchPipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n          <button class="btn btn-secondary" ng-if="BatchPipelineConfigCtrl.isDeployed && BatchPipelineConfigCtrl.activeTab !== \'runtimeArgs\'" ng-disabled="!BatchPipelineConfigCtrl.enablePipelineUpdate || BatchPipelineConfigCtrl.updatingPipeline || BatchPipelineConfigCtrl.startingPipeline || BatchPipelineConfigCtrl.buttonsAreDisabled()" ng-click="BatchPipelineConfigCtrl.updateAndClose()">\n            <span ng-if="!BatchPipelineConfigCtrl.updatingPipeline">Save</span>\n            <span ng-if="BatchPipelineConfigCtrl.updatingPipeline">Saving</span>\n            <span ng-if="BatchPipelineConfigCtrl.updatingPipeline">\n              <span class="fa fa-spinner fa-spin"></span>\n           </span>\n          </button>\n          <span class="num-runtime-args" ng-if="BatchPipelineConfigCtrl.activeTab === \'runtimeArgs\'">\n              {{ BatchPipelineConfigCtrl.runtimeArguments.pairs.length }}\n            <ng-pluralize count="BatchPipelineConfigCtrl.runtimeArguments.pairs.length" when="{\'one\': \'runtime argument\',\n                    \'other\': \'runtime arguments\'}">\n            </ng-pluralize>\n          </span>\n        </div>\n        <div ng-if="!BatchPipelineConfigCtrl.isDeployed && !BatchPipelineConfigCtrl.showPreviewConfig">\n          <button class="btn btn-primary apply-close" data-testid="config-apply-close" ng-disabled="BatchPipelineConfigCtrl.buttonsAreDisabled()" ng-click="BatchPipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'my-pipeline-configurations/my-sql-pipeline-config/my-sql-pipeline-config.html',
        '\n\n<div class="pipeline-configurations-content modeless-container">\n  <div class="pipeline-configurations-header modeless-header">\n    <div class="modeless-title">\n      Configure\n      <span ng-if="SqlPipelineConfigCtrl.pipelineName.length > 0">\n        "{{SqlPipelineConfigCtrl.pipelineName}}"\n      </span>\n    </div>\n    <div class="btn-group">\n      <a class="btn" ng-click="SqlPipelineConfigCtrl.onClose()">\n        <span class="fa fa-remove"></span>\n      </a>\n    </div>\n  </div>\n  <div class="pipeline-configurations-body modeless-content">\n    <div class="configurations-side-panel">\n      <div class="configurations-tabs">\n        <div class="configuration-tab" ng-class="{\'active\': SqlPipelineConfigCtrl.activeTab === \'runtimeArgs\'}" ng-click="SqlPipelineConfigCtrl.activeTab = \'runtimeArgs\'" ng-if="SqlPipelineConfigCtrl.isDeployed || SqlPipelineConfigCtrl.showPreviewConfig">\n          Runtime arguments\n        </div>\n        <div class="configuration-tab toggle-advanced-options" ng-click="SqlPipelineConfigCtrl.showAdvanced = !SqlPipelineConfigCtrl.showAdvanced" ng-if="SqlPipelineConfigCtrl.isDeployed || SqlPipelineConfigCtrl.showPreviewConfig">\n        <span class="fa" ng-class="{\'fa-caret-down\': SqlPipelineConfigCtrl.showAdvanced, \'fa-caret-right\': !SqlPipelineConfigCtrl.showAdvanced}">\n        </span>\n          Advanced options\n        </div>\n        <div class="advanced-options" ng-show="SqlPipelineConfigCtrl.showAdvanced || !SqlPipelineConfigCtrl.isDeployed && !SqlPipelineConfigCtrl.showPreviewConfig">\n          <div class="configuration-tab" ng-class="{\'active\': SqlPipelineConfigCtrl.activeTab === \'pipelineConfig\'}" ng-click="SqlPipelineConfigCtrl.activeTab = \'pipelineConfig\'">\n            Pipeline config\n          </div>\n          <div class="configuration-tab" ng-class="{\'active\': SqlPipelineConfigCtrl.activeTab === \'resources\', \'disabled\': SqlPipelineConfigCtrl.showPreviewConfig}" ng-click="SqlPipelineConfigCtrl.activeTab = \'resources\'">\n            Resources\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="configuration-content">\n      <div class="configuration-step-content configuration-content-container" id="runtime-arguments-tab-content" ng-if="SqlPipelineConfigCtrl.activeTab === \'runtimeArgs\'">\n        <my-pipeline-runtime-args runtime-arguments="SqlPipelineConfigCtrl.runtimeArguments" contains-macros="SqlPipelineConfigCtrl.containsMacros" resolved-macros="SqlPipelineConfigCtrl.resolvedMacros">\n        </my-pipeline-runtime-args>\n      </div>\n\n      <div class="configuration-step-content" id="pipeline-config-tab-content" ng-if="SqlPipelineConfigCtrl.activeTab === \'pipelineConfig\'">\n        <div class="step-content-heading">\n          Set configurations for this pipeline\n        </div>\n        <div class="label-with-toggle service-account-path row">\n          <span class="toggle-label col-xs-4">Service Account Path</span>\n          <div class="col-xs-7">\n            <input type="text" class="form-control" placeholder="Service Account Path" ng-model="SqlPipelineConfigCtrl.serviceAccountPath">\n            <i class="fa fa-info-circle" uib-tooltip="The filepath to the service account credentials to use when connecting to BigQuery." tooltip-placement="right">\n            </i>\n          </div>\n        </div>\n        <div class="label-with-toggle instrumentation row">\n          <span class="toggle-label col-xs-4">Instrumentation</span>\n          <div class="col-xs-7 toggle-container">\n            <toggle-switch is-on="SqlPipelineConfigCtrl.instrumentation" on-toggle="SqlPipelineConfigCtrl.onInstrumentationChange"></toggle-switch>\n            <i class="fa fa-info-circle" uib-tooltip="Emits timing metrics such as total time, mean, and and standard deviation for pipeline stages. It is recommended to always have this setting on, unless the environment is short on resources." tooltip-placement="right">\n            </i>\n          </div>\n        </div>\n      </div>\n      <div class="configuration-step-content sql-content" id="resources-tab-content" ng-if="SqlPipelineConfigCtrl.activeTab === \'resources\'">\n        <div class="step-content-heading">\n          Specify the resources for the following processes of the Spark program\n        </div>\n        <div class="col-xs-4 client">\n          <span class="resource-title">\n            Client\n          </span>\n          <i class="fa fa-info-circle" uib-tooltip="Resources for the client process which launches the Apache Spark Streaming pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="SqlPipelineConfigCtrl.actionCreator" store="SqlPipelineConfigCtrl.store" resource-type="clientResource" on-memory-change="SqlPipelineConfigCtrl.onClientMemoryChange" on-core-change="SqlPipelineConfigCtrl.onClientCoreChange" virtual-cores-value="SqlPipelineConfigCtrl.clientResources.virtualCores" memory-mb-value="SqlPipelineConfigCtrl.clientResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n        <div class="col-xs-4 driver">\n          <span class="resource-title">\n            Driver\n          </span>\n          <i class="fa fa-info-circle" uib-tooltip="Resources for the Apache Spark driver process which initializes the pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="SqlPipelineConfigCtrl.actionCreator" store="SqlPipelineConfigCtrl.store" resource-type="driverResource" on-memory-change="SqlPipelineConfigCtrl.onDriverMemoryChange" on-core-change="SqlPipelineConfigCtrl.onDriverCoreChange" virtual-cores-value="SqlPipelineConfigCtrl.driverResources.virtualCores" memory-mb-value="SqlPipelineConfigCtrl.driverResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n        <div class="col-xs-4 executor">\n          <span class="resource-title">\n            Executor\n          </span>\n          <i class="fa fa-info-circle" uib-tooltip="Resources for executor processes which run tasks in an Apache Spark pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="SqlPipelineConfigCtrl.actionCreator" store="SqlPipelineConfigCtrl.store" resource-type="executorResource" on-memory-change="SqlPipelineConfigCtrl.onExecutorMemoryChange" on-core-change="SqlPipelineConfigCtrl.onExecutorCoreChange" virtual-cores-value="SqlPipelineConfigCtrl.executorResources.virtualCores" memory-mb-value="SqlPipelineConfigCtrl.executorResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n      </div>\n\n      <div class="configuration-step-navigation">\n        <div class="apply-action-container" ng-if="SqlPipelineConfigCtrl.isDeployed || SqlPipelineConfigCtrl.showPreviewConfig">\n          <button class="btn btn-primary apply-action" ng-if="SqlPipelineConfigCtrl.isDeployed" ng-disabled="SqlPipelineConfigCtrl.buttonsAreDisabled() || SqlPipelineConfigCtrl.startingPipeline || SqlPipelineConfigCtrl.updatingPipeline" ng-click="SqlPipelineConfigCtrl.applyAndRunPipeline()">\n            <span>Save &amp; Run</span>\n            <span ng-if="SqlPipelineConfigCtrl.startingPipeline" class="fa fa-spinner fa-spin"></span>\n          </button>\n          <button class="btn btn-primary apply-action" ng-if="SqlPipelineConfigCtrl.showPreviewConfig" ng-disabled="SqlPipelineConfigCtrl.buttonsAreDisabled()" ng-click="SqlPipelineConfigCtrl.applyAndRunPipeline()">\n            <span>Save &amp; Run</span>\n          </button>\n          <button class="btn btn-secondary" ng-if="SqlPipelineConfigCtrl.isDeployed && SqlPipelineConfigCtrl.activeTab === \'runtimeArgs\'" ng-disabled="SqlPipelineConfigCtrl.buttonsAreDisabled()" ng-click="SqlPipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n          <button class="btn btn-secondary" ng-if="SqlPipelineConfigCtrl.isDeployed && SqlPipelineConfigCtrl.activeTab !== \'runtimeArgs\'" ng-disabled="!SqlPipelineConfigCtrl.enablePipelineUpdate || SqlPipelineConfigCtrl.startingPipeline || SqlPipelineConfigCtrl.updatingPipeline || SqlPipelineConfigCtrl.buttonsAreDisabled()" ng-click="SqlPipelineConfigCtrl.updateAndClose()">\n            <span ng-if="!SqlPipelineConfigCtrl.updatingPipeline">Save</span>\n            <span ng-if="SqlPipelineConfigCtrl.updatingPipeline">Saving</span>\n            <span ng-if="SqlPipelineConfigCtrl.updatingPipeline">\n              <span class="fa fa-spinner fa-spin"></span>\n            </span>\n          </button>\n          <button class="btn btn-secondary" ng-if="SqlPipelineConfigCtrl.showPreviewConfig" ng-disabled="SqlPipelineConfigCtrl.buttonsAreDisabled()" ng-click="SqlPipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n          <span class="num-runtime-args" ng-if="SqlPipelineConfigCtrl.activeTab === \'runtimeArgs\'">\n            {{ SqlPipelineConfigCtrl.runtimeArguments.pairs.length }}\n            <ng-pluralize count="SqlPipelineConfigCtrl.runtimeArguments.pairs.length" when="{\'one\': \'runtime argument\',\n                    \'other\': \'runtime arguments\'}">\n            </ng-pluralize>\n          </span>\n        </div>\n        <div ng-if="!SqlPipelineConfigCtrl.isDeployed && !SqlPipelineConfigCtrl.showPreviewConfig">\n          <button class="btn btn-primary apply-close" data-testid="config-apply-close" ng-disabled="SqlPipelineConfigCtrl.buttonsAreDisabled()" ng-click="SqlPipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'my-pipeline-configurations/my-realtime-pipeline-config/my-realtime-pipeline-config.html',
        '\n\n<div class="pipeline-configurations-content modeless-container">\n  <div class="pipeline-configurations-header modeless-header">\n    <div class="modeless-title">\n      Configure\n      <span ng-if="RealtimePipelineConfigCtrl.pipelineName.length > 0">\n        "{{RealtimePipelineConfigCtrl.pipelineName}}"\n      </span>\n    </div>\n    <div class="btn-group">\n      <a class="btn" ng-click="RealtimePipelineConfigCtrl.onClose()">\n        <span class="fa fa-remove"></span>\n      </a>\n    </div>\n  </div>\n  <div class="pipeline-configurations-body modeless-content">\n    <div class="configurations-side-panel">\n      <div class="configurations-tabs">\n        <div class="configuration-tab" ng-class="{\'active\': RealtimePipelineConfigCtrl.activeTab === \'runtimeArgs\'}" ng-click="RealtimePipelineConfigCtrl.activeTab = \'runtimeArgs\'" ng-if="RealtimePipelineConfigCtrl.isDeployed || RealtimePipelineConfigCtrl.showPreviewConfig">\n          Runtime arguments\n        </div>\n        <div class="configuration-tab" ng-class="{\'active\': RealtimePipelineConfigCtrl.activeTab === \'previewConfig\'}" ng-click="RealtimePipelineConfigCtrl.activeTab = \'previewConfig\'" ng-if="!RealtimePipelineConfigCtrl.isDeployed && RealtimePipelineConfigCtrl.showPreviewConfig">\n          Preview config\n        </div>\n        <div class="configuration-tab toggle-advanced-options" ng-click="RealtimePipelineConfigCtrl.showAdvanced = !RealtimePipelineConfigCtrl.showAdvanced" ng-if="RealtimePipelineConfigCtrl.isDeployed || RealtimePipelineConfigCtrl.showPreviewConfig">\n          <span class="fa" ng-class="{\'fa-caret-down\': RealtimePipelineConfigCtrl.showAdvanced, \'fa-caret-right\': !RealtimePipelineConfigCtrl.showAdvanced}">\n           </span>\n          Advanced options\n        </div>\n        <div class="advanced-options" ng-show="RealtimePipelineConfigCtrl.showAdvanced || !RealtimePipelineConfigCtrl.isDeployed && !RealtimePipelineConfigCtrl.showPreviewConfig">\n          <div class="configuration-tab" ng-class="{\'active\': RealtimePipelineConfigCtrl.activeTab === \'pipelineConfig\'}" ng-click="RealtimePipelineConfigCtrl.activeTab = \'pipelineConfig\'">\n            Pipeline config\n          </div>\n          <div class="configuration-tab" ng-class="{\'active\': RealtimePipelineConfigCtrl.activeTab === \'engineConfig\'}" ng-click="RealtimePipelineConfigCtrl.activeTab = \'engineConfig\'">\n            Engine config\n          </div>\n          <div class="configuration-tab" ng-class="{\'active\': RealtimePipelineConfigCtrl.activeTab === \'resources\', \'disabled\': RealtimePipelineConfigCtrl.showPreviewConfig}" ng-click="RealtimePipelineConfigCtrl.activeTab = \'resources\'">\n            Resources\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="configuration-content">\n      <div class="configuration-step-content configuration-content-container" id="runtime-arguments-tab-content" ng-if="RealtimePipelineConfigCtrl.activeTab === \'runtimeArgs\'">\n        <my-pipeline-runtime-args runtime-arguments="RealtimePipelineConfigCtrl.runtimeArguments" contains-macros="RealtimePipelineConfigCtrl.containsMacros" resolved-macros="RealtimePipelineConfigCtrl.resolvedMacros">\n        </my-pipeline-runtime-args>\n      </div>\n\n      <div class="configuration-step-content configuration-content-container realtime-content" id="preview-config-tab-content" ng-if="RealtimePipelineConfigCtrl.activeTab === \'previewConfig\'">\n        <div class="step-content-heading">\n          Set how long you want to run your preview\n        </div>\n        <div class="label-with-toggle timeout-in-minutes row">\n          <span class="toggle-label col-xs-4">Time to run preview</span>\n          <my-number-widget ng-model="RealtimePipelineConfigCtrl.timeoutInMinutes" config="RealtimePipelineConfigCtrl.numberConfig"></my-number-widget>\n          <span class="control-label min">min</span>\n          <i class="fa fa-info-circle" uib-tooltip="Number of minutes to run Realtime pipeline preview. It can be run for a maximum of 15 mins." tooltip-placement="right">\n        </i></div>\n      </div>\n\n      <div class="configuration-step-content" id="pipeline-config-tab-content" ng-if="RealtimePipelineConfigCtrl.activeTab === \'pipelineConfig\'">\n        <div class="step-content-heading">\n          Set configurations for this pipeline\n        </div>\n        <div class="label-with-toggle batch-interval form-group row">\n          <span class="toggle-label col-xs-4">Batch interval</span>\n          <div class="col-xs-7">\n            <select class="form-control small-dropdown" ng-model="RealtimePipelineConfigCtrl.batchIntervalTime" ng-options="option as option for option in RealtimePipelineConfigCtrl.batchIntervalTimeOptions" ng-change="RealtimePipelineConfigCtrl.updatePipelineEditStatus()">\n            </select>\n            <select class="form-control small-dropdown batch-interval-unit" ng-model="RealtimePipelineConfigCtrl.batchIntervalUnit" ng-options="optionKey as optionVal for (optionKey,optionVal) in RealtimePipelineConfigCtrl.batchIntervalUnits" ng-change="RealtimePipelineConfigCtrl.updatePipelineEditStatus()">\n            </select>\n          </div>\n        </div>\n        <div class="label-with-toggle checkpointing row">\n          <span class="toggle-label col-xs-4">Checkpointing</span>\n          <div class="col-xs-7 toggle-container">\n            <toggle-switch is-on="!RealtimePipelineConfigCtrl.checkpointing" on-toggle="RealtimePipelineConfigCtrl.onCheckPointingChange"></toggle-switch>\n            <i class="fa fa-info-circle" uib-tooltip="Allows Apache Spark Streaming to checkpoint data (RDDs) to persistent storage so that the pipeline can recover from failures." tooltip-placement="right">\n            </i>\n          </div>\n        </div>\n        <div class="label-with-toggle checkpoint-directory row" ng-if="!RealtimePipelineConfigCtrl.checkpointing">\n          <span class="toggle-label col-xs-4">Checkpoint directory</span>\n          <div class="col-xs-7">\n            <input type="text" class="form-control" placeholder="Checkpoint directory" ng-model="RealtimePipelineConfigCtrl.checkpointDir">\n          </div>\n        </div>\n        <div class="label-with-toggle instrumentation row">\n          <span class="toggle-label col-xs-4">Instrumentation</span>\n          <div class="col-xs-7 toggle-container">\n            <toggle-switch is-on="RealtimePipelineConfigCtrl.instrumentation" on-toggle="RealtimePipelineConfigCtrl.onInstrumentationChange"></toggle-switch>\n            <i class="fa fa-info-circle" uib-tooltip="Emits timing metrics such as total time, mean, and and standard deviation for pipeline stages. It is recommended to always have this setting on, unless the environment is short on resources." tooltip-placement="right">\n            </i>\n          </div>\n        </div>\n      </div>\n      <div class="configuration-step-content realtime-content" id="resources-tab-content" ng-if="RealtimePipelineConfigCtrl.activeTab === \'resources\'">\n        <div class="step-content-heading">\n          Specify the resources for the following processes of the Spark program\n        </div>\n        <div class="col-xs-4 client">\n          <span class="resource-title">\n            Client\n          </span>\n          <i class="fa fa-info-circle" uib-tooltip="Resources for the client process which launches the Apache Spark Streaming pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="RealtimePipelineConfigCtrl.actionCreator" store="RealtimePipelineConfigCtrl.store" resource-type="clientResource" on-memory-change="RealtimePipelineConfigCtrl.onClientMemoryChange" on-core-change="RealtimePipelineConfigCtrl.onClientCoreChange" virtual-cores-value="RealtimePipelineConfigCtrl.clientResources.virtualCores" memory-mb-value="RealtimePipelineConfigCtrl.clientResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n        <div class="col-xs-4 driver">\n          <span class="resource-title">\n            Driver\n          </span>\n          <i class="fa fa-info-circle" uib-tooltip="Resources for the Apache Spark driver process which initializes the pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="RealtimePipelineConfigCtrl.actionCreator" store="RealtimePipelineConfigCtrl.store" resource-type="driverResource" on-memory-change="RealtimePipelineConfigCtrl.onDriverMemoryChange" on-core-change="RealtimePipelineConfigCtrl.onDriverCoreChange" virtual-cores-value="RealtimePipelineConfigCtrl.driverResources.virtualCores" memory-mb-value="RealtimePipelineConfigCtrl.driverResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n        <div class="col-xs-4 executor">\n          <span class="resource-title">\n            Executor\n          </span>\n          <i class="fa fa-info-circle" uib-tooltip="Resources for executor processes which run tasks in an Apache Spark pipeline" tooltip-placement="right">\n          </i>\n          <div class="resource-holder">\n            <div action-creator="RealtimePipelineConfigCtrl.actionCreator" store="RealtimePipelineConfigCtrl.store" resource-type="executorResource" on-memory-change="RealtimePipelineConfigCtrl.onExecutorMemoryChange" on-core-change="RealtimePipelineConfigCtrl.onExecutorCoreChange" virtual-cores-value="RealtimePipelineConfigCtrl.executorResources.virtualCores" memory-mb-value="RealtimePipelineConfigCtrl.executorResources.memoryMB" my-pipeline-resource-factory></div>\n          </div>\n        </div>\n      </div>\n\n      <div class="configuration-step-content configuration-content-container realtime-content" id="engine-config-tab-content" ng-if="RealtimePipelineConfigCtrl.activeTab === \'engineConfig\'">\n        <fieldset ng-disabled="RealtimePipelineConfigCtrl.isDeployed">\n          <div class="step-content-heading">\n            Select the type of engine running your realtime pipeline\n          </div>\n          <div class="label-with-toggle backpressure row">\n            <span class="toggle-label col-xs-4">Backpressure</span>\n            <div class="col-xs-7 toggle-container">\n              <toggle-switch is-on="RealtimePipelineConfigCtrl.backpressure" is-disabled="RealtimePipelineConfigCtrl.isDeployed" on-toggle="RealtimePipelineConfigCtrl.onBackpressureChange"></toggle-switch>\n              <i class="fa fa-info-circle" uib-tooltip="Allows the Apache Spark Streaming engine to control the receiving rate based on the current batch scheduling delays and processing times so that the system receives only as fast as the system can process." tooltip-placement="right">\n              </i>\n            </div>\n          </div>\n          <div class="label-with-toggle numExecutors form-group row">\n            <span class="toggle-label col-xs-4">Number of executors</span>\n            <div class="col-xs-7">\n              <select class="form-control small-dropdown" ng-model="RealtimePipelineConfigCtrl.numExecutors" ng-options="option as option for option in RealtimePipelineConfigCtrl.numExecutorsOptions">\n              </select>\n              <i class="fa fa-info-circle" uib-tooltip="The number of executors to allocate for this pipeline on Apache Yarn." tooltip-placement="right">\n              </i>\n            </div>\n          </div>\n        </fieldset>\n        <div class="add-custom-config">\n          <span ng-hide="RealtimePipelineConfigCtrl.isDeployed">\n            <a class="add-custom-config-label" ng-click="RealtimePipelineConfigCtrl.showCustomConfig = !RealtimePipelineConfigCtrl.showCustomConfig">\n                <span class="fa" ng-class="{\'fa-caret-down\': RealtimePipelineConfigCtrl.showCustomConfig, \'fa-caret-right\': !RealtimePipelineConfigCtrl.showCustomConfig}">\n                 </span>\n                Show Custom Config\n            </a>\n            <i class="fa fa-info-circle" uib-tooltip="Enter key-value pairs of configuration parameters that will be passed to the underlying Apache Spark Streaming program." tooltip-placement="right">\n            </i>\n            <span class="float-xs-right num-rows" ng-if="RealtimePipelineConfigCtrl.showCustomConfig">\n                {{ RealtimePipelineConfigCtrl.numOfCustomEngineConfigFilled() }}\n              <ng-pluralize count="RealtimePipelineConfigCtrl.numOfCustomEngineConfigFilled()" when="{\'one\': \'custom config\',\n                      \'other\': \'custom configs\'}">\n              </ng-pluralize>\n            </span>\n          </span>\n          <span ng-if="(RealtimePipelineConfigCtrl.isDeployed) || (!RealtimePipelineConfigCtrl.isDeployed && RealtimePipelineConfigCtrl.showCustomConfig)">\n            <hr>\n            <span ng-if="RealtimePipelineConfigCtrl.isDeployed">\n              <label>Custom config</label>\n              <i class="fa fa-info-circle" uib-tooltip="Enter key-value pairs of configuration parameters that will be passed to the underlying Apache Spark Streaming program." tooltip-placement="right">\n              </i>\n              <span class="float-xs-right num-rows">\n                  {{ RealtimePipelineConfigCtrl.numOfCustomEngineConfigFilled() }}\n                <ng-pluralize count="RealtimePipelineConfigCtrl.numOfCustomEngineConfigFilled()" when="{\'one\': \'custom config\',\n                        \'other\': \'custom configs\'}">\n                </ng-pluralize>\n              </span>\n            </span>\n            <div class="custom-config-labels key-value-pair-labels">\n              <span class="key-label">Name</span>\n              <span class="value-label">Value</span>\n            </div>\n            <div class="custom-config-values key-value-pair-values">\n              <key-value-pairs key-values="RealtimePipelineConfigCtrl.customEngineConfig" on-key-value-change="RealtimePipelineConfigCtrl.onCustomEngineConfigChange"></key-value-pairs>\n            </div>\n          </span>\n        </div>\n      </div>\n\n      <div class="configuration-step-navigation">\n        <div class="apply-action-container" ng-if="RealtimePipelineConfigCtrl.isDeployed || RealtimePipelineConfigCtrl.showPreviewConfig">\n          <button class="btn btn-primary apply-action" ng-if="RealtimePipelineConfigCtrl.isDeployed" ng-disabled="RealtimePipelineConfigCtrl.buttonsAreDisabled() || RealtimePipelineConfigCtrl.startingPipeline || RealtimePipelineConfigCtrl.updatingPipeline" ng-click="RealtimePipelineConfigCtrl.applyAndRunPipeline()">\n            <span>Save &amp; Run</span>\n            <span ng-if="RealtimePipelineConfigCtrl.startingPipeline" class="fa fa-spinner fa-spin"></span>\n          </button>\n          <button class="btn btn-primary apply-action" ng-if="RealtimePipelineConfigCtrl.showPreviewConfig" ng-disabled="RealtimePipelineConfigCtrl.buttonsAreDisabled()" ng-click="RealtimePipelineConfigCtrl.applyAndRunPipeline()">\n            <span>Save &amp; Run</span>\n          </button>\n          <button class="btn btn-secondary" ng-if="RealtimePipelineConfigCtrl.isDeployed && RealtimePipelineConfigCtrl.activeTab === \'runtimeArgs\'" ng-disabled="RealtimePipelineConfigCtrl.buttonsAreDisabled()" ng-click="RealtimePipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n          <button class="btn btn-secondary" ng-if="RealtimePipelineConfigCtrl.isDeployed && RealtimePipelineConfigCtrl.activeTab !== \'runtimeArgs\'" ng-disabled="!RealtimePipelineConfigCtrl.enablePipelineUpdate || RealtimePipelineConfigCtrl.startingPipeline || RealtimePipelineConfigCtrl.updatingPipeline || RealtimePipelineConfigCtrl.buttonsAreDisabled()" ng-click="RealtimePipelineConfigCtrl.updateAndClose()">\n            <span ng-if="!RealtimePipelineConfigCtrl.updatingPipeline">Save</span>\n            <span ng-if="RealtimePipelineConfigCtrl.updatingPipeline">Saving</span>\n            <span ng-if="RealtimePipelineConfigCtrl.updatingPipeline">\n              <span class="fa fa-spinner fa-spin"></span>\n            </span>\n          </button>\n          <button class="btn btn-secondary" ng-if="RealtimePipelineConfigCtrl.showPreviewConfig" ng-disabled="RealtimePipelineConfigCtrl.buttonsAreDisabled()" ng-click="RealtimePipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n          <span class="num-runtime-args" ng-if="RealtimePipelineConfigCtrl.activeTab === \'runtimeArgs\'">\n              {{ RealtimePipelineConfigCtrl.runtimeArguments.pairs.length }}\n            <ng-pluralize count="RealtimePipelineConfigCtrl.runtimeArguments.pairs.length" when="{\'one\': \'runtime argument\',\n                    \'other\': \'runtime arguments\'}">\n            </ng-pluralize>\n          </span>\n        </div>\n        <div ng-if="!RealtimePipelineConfigCtrl.isDeployed && !RealtimePipelineConfigCtrl.showPreviewConfig">\n          <button class="btn btn-primary apply-close" data-testid="config-apply-close" ng-disabled="RealtimePipelineConfigCtrl.buttonsAreDisabled()" ng-click="RealtimePipelineConfigCtrl.applyAndClose()">\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'my-post-run-action-wizard/wizard-configure-confirm-step/wizard-configure-confirm-step.html',
        '\n\n<div class="confirm-step-content">\n  <configuration-group plugin-properties="WizardConfigureConfirmStepCtrl.action._backendProperties" widget-json="WizardConfigureConfirmStepCtrl.widgetJson" values="WizardConfigureConfirmStepCtrl.action.properties" on-change="WizardConfigureConfirmStepCtrl.onChangeHandler" disabled="WizardConfigureConfirmStepCtrl.isDisabled" errors="WizardConfigureConfirmStepCtrl.errors"></configuration-group>\n</div>\n<h3 ng-if="WizardConfigureConfirmStepCtrl.loadingPlugin">\n  <span class="fa fa-spinner fa-spin"></span>\n  <span>Loading...</span>\n</h3>\n<div class="confirm-step-wizard-footer">\n  <div class="pull-right">\n    <div class="btn btn-grey-cancel" ng-if="WizardConfigureConfirmStepCtrl.mode === \'create\' || (WizardConfigureConfirmStepCtrl.mode === \'edit\' && WizardConfigureConfirmStepCtrl.isDisabled)" ng-click="WizardConfigureConfirmStepCtrl.gotoPreviousStep()">\n      Back\n    </div>\n\n    <div class="btn btn-blue confirm-step-next-btn" data-cy="next-btn" ng-if="([\'edit\', \'create\'].indexOf(WizardConfigureConfirmStepCtrl.mode) !== -1) && !WizardConfigureConfirmStepCtrl.isDisabled" ng-click="WizardConfigureConfirmStepCtrl.addAction()" ng-disabled="WizardConfigureConfirmStepCtrl.validating">\n      <span ng-if="!WizardConfigureConfirmStepCtrl.validating">Next</span>\n      <span ng-if="WizardConfigureConfirmStepCtrl.validating">\n        <span class="fa fa-spinner fa-spin"></span>\n      </span>\n    </div>\n    <div class="btn btn-blue" data-cy="confirm-btn" ng-if="([\'edit\', \'create\'].indexOf(WizardConfigureConfirmStepCtrl.mode) !== -1) && WizardConfigureConfirmStepCtrl.isDisabled" ng-click="WizardConfigureConfirmStepCtrl.addAction()">\n      Confirm\n    </div>\n    <div class="btn btn-blue" ng-if="WizardConfigureConfirmStepCtrl.mode === \'view\'" ng-click="WizardConfigureConfirmStepCtrl.addAction(true)">\n      Close\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'my-post-run-action-wizard/wizard-select-action-step/wizard-select-action-step.html',
        '\n\n<div ng-if="!WizardSelectActionStepCtrl.loadingPlugins">\n  <div class="actions-list-section">\n    <div ng-repeat="action in WizardSelectActionStepCtrl.postActionsList track by $index" class="btn btn-default" my-popover data-placement="right" data-template="action.template" content-data="action" custom-class="non-template-popover" data-popover-context="WizardSelectActionStepCtrl" ng-click="WizardSelectActionStepCtrl.chooseAction(action)">\n      {{::action.label}}\n    </div>\n  </div>\n</div>\n<h3 ng-if="WizardSelectActionStepCtrl.loadingPlugins">\n  <span class="fa fa-spinner fa-spin"></span>\n  <span>Loading...</span>\n</h3>\n'
      );
      $templateCache.put(
        'widget-container/widget-complex-schema-editor/widget-complex-schema-editor.html',
        '\n\n<div class="widget-schema-container">\n  <div class="error text-danger">\n    {{ SchemaEditor.error }}\n  </div>\n  <div ng-if="!SchemaEditor.clearDOM">\n    <div ng-repeat="schemaObj in SchemaEditor.schemas track by $index">\n      <div ng-if="SchemaEditor.schemas.length > 1" ng-click="SchemaEditor.currentIndex = $index" class="schema-title">\n        <i class="fa" ng-class="{\'fa-arrow-right\': SchemaEditor.currentIndex !== $index, \'fa-arrow-down\': SchemaEditor.currentIndex === $index}"></i>\n        <span>{{schemaObj.name | caskCapitalizeFilter}}</span>\n      </div>\n      <div ng-if="SchemaEditor.schemas.length === 1">\n        <span ng-if="schemaObj.name !== \'etlSchemaBody\'">\n          {{schemaObj.name | caskCapitalizeFilter}}\n        </span>\n      </div>\n      <div class="content" ng-class="{\'hide\': SchemaEditor.currentIndex !== $index, \'\': SchemaEditor.currentIndex === $index}">\n        <my-complex-schema ng-model="schemaObj.schema" record-name="\'etlSchemaBody\'" is-disabled="SchemaEditor.isDisabled || SchemaEditor.implicitSchemaPresent" parent-format-output="SchemaEditor.formatOutput(updateDefault)" schema-prefix="SchemaEditor.schemaPrefix" derived-dataset-id="SchemaEditor.derivedDatasetId" is-in-studio="SchemaEditor.isInStudio" errors="SchemaEditor.errors[SchemaEditor.schemas.length === 1 ? \'noSchemaSection\' : schemaObj.name]">\n        </my-complex-schema>\n      </div>\n    </div>\n  </div>\n\n  <div class="text-center" ng-if="SchemaEditor.clearDOM">\n    <h3>\n      <span class="fa fa-spin fa-refresh"></span>\n    </h3>\n  </div>\n\n  <a class="sr-only" id="schema-export-link" href="{{SchemaEditor.url}}" download="{{SchemaEditor.exportFileName}}.json">Export</a>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-ds-multiplevalues/widget-ds-multiplevalues.html',
        '\n\n<div class="values-container">\n\n  <div ng-repeat="property in properties track by $index" class="row" ng-keypress="enter($event, $last)">\n    <div class="col-xs-10 col-lg-8">\n      <form class="form-inline">\n        <span ng-repeat="value in property.values track by $index">\n          <input type="text" class="form-control" ng-model="property.values[$index]" placeholder="{{placeholders[$index] || \'value\'}}" my-focus-watch="$first">\n        </span>\n      </form>\n    </div>\n    <div class="col-xs-2 col-lg-4 field-actions" ng-class="{\'last\': $last}">\n      <a href="" class="btn btn-danger" ng-click="removeProperty(property)">\n        <span class="fa fa-fw fa-trash"> </span>\n      </a>\n      <a class="btn btn-info btn-transparent" ng-click="addProperty()" ng-if="$last">\n        <span class="fa fa-fw fa-plus"></span>\n      </a>\n    </div>\n  </div>\n\n  <div ng-if="properties.length === 0" class="empty-container">\n    <a class="btn btn-info btn-transparent" ng-click="addProperty()">\n      <span class="fa fa-fw fa-plus"></span>\n      <span>Add Property</span>\n    </a>\n  </div>\n\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-function-dropdown-with-alias/widget-function-dropdown-with-alias.html',
        '\n\n<div class="row" ng-repeat="fnalias in functionAliasList">\n  <div class="col-xs-6">\n    <input type="text" class="form-control" ng-model="fnalias.field" placeholder="{{placeholders.field}}">\n    <select ng-model="fnalias.functionName" class="form-control" ng-options="fn as fn for fn in dropdownOptions"></select>\n  </div>\n  <div class="col-xs-4">\n    <div class="alias-wrapper">\n      <span> as </span>\n      <input class="form-control" type="text" ng-model="fnalias.alias" placeholder="{{placeholders.alias}}">\n    </div>\n  </div>\n  <div class="col-xs-2 field-actions">\n    <span class="text-danger" ng-click="removeFunctionAlias($index)">\n      <span class="fa fa-fw fa-trash"></span>\n    </span>\n\n    <span class="text-info" ng-click="addFunctionAlias()" ng-if="$last">\n      <span class="fa fa-fw fa-plus"></span>\n    </span>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-dsv/widget-dsv.html',
        '\n\n<div class="dsv-container">\n  <div ng-repeat="property in properties" class="row" ng-keypress="enter($event, $last)">\n    <div class="col-xs-10 col-lg-8">\n      <input type="text" class="form-control" ng-model="property.value" placeholder="{{ placeholder }}" my-focus-watch="property.newField">\n    </div>\n\n    <div class="col-xs-2 col-lg-4 text-left field-actions">\n      <a href="" class="btn btn-danger" ng-click="removeProperty(property)">\n        <span class="fa fa-fw fa-trash"> </span>\n      </a>\n      <a class="btn btn-info btn-transparent" ng-click="addProperty()" ng-if="$last">\n        <span class="fa fa-fw fa-plus"></span>\n      </a>\n    </div>\n\n  </div>\n\n  <div ng-if="properties.length === 0" class="empty-container">\n    <a class="btn btn-info btn-transparent" ng-click="addProperty()">\n      <span class="fa fa-fw fa-plus"></span>\n      <span>Add Value</span>\n    </a>\n  </div>\n\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-input-field-selector/widget-input-field-selector.html',
        '\n\n<div class="input-field-selector">\n\t<select class="form-control" ng-model="FieldSelector.model" ng-options="option.value as option.name for option in FieldSelector.fieldOptions">\n\t</select>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-input-schema/widget-input-schema.html',
        '\n\n\n\n\n<div>\n\n  \n  <div ng-if="::(MyInputSchemaCtrl.multipleInputs)">\n    <div ng-repeat="inputschema in ::MyInputSchemaCtrl.inputSchemas">\n      <div ng-click="MyInputSchemaCtrl.currentIndex = $index" style="cursor:pointer" class="title">\n        <i class="fa" ng-class="{\'fa-arrow-right\': MyInputSchemaCtrl.currentIndex !== $index, \'fa-arrow-down\': MyInputSchemaCtrl.currentIndex === $index}"></i>\n        <span>{{::inputschema.name}}</span>\n      </div>\n      <div class="content" ng-if="!inputschema.isMacro && MyInputSchemaCtrl.currentIndex === $index" ng-class="{\'hide\': MyInputSchemaCtrl.currentIndex !== $index}">\n        <my-complex-schema ng-model="inputschema.schema" is-disabled="true" is-input-schema="true" is-in-studio="MyInputSchemaCtrl.isInStudio" errors="errors[inputschema.name]">\n        </my-complex-schema>\n      </div>\n      <div ng-if="inputschema.isMacro && MyInputSchemaCtrl.currentIndex === $index" ng-class="{\'hide\': MyInputSchemaCtrl.currentIndex !== $index}">\n        {{inputschema.schema}}\n      </div>\n    </div>\n    <div ng-if="!MyInputSchemaCtrl.inputSchemas.length">\n      No schema available\n    </div>\n  </div>\n\n  \n\n  \n\n  <div ng-if="(!MyInputSchemaCtrl.multipleInputs && !MyInputSchemaCtrl.inputSchemas[0].isMacro)">\n    \n\n    <my-complex-schema ng-model="MyInputSchemaCtrl.inputSchemas[0].schema" is-disabled="true" is-input-schema="true" is-in-studio="MyInputSchemaCtrl.isInStudio" errors="errors[MyInputSchemaCtrl.inputSchemas[0].name]">\n    </my-complex-schema>\n\n    \n  </div>\n\n  <div ng-if="!MyInputSchemaCtrl.multipleInputs && MyInputSchemaCtrl.inputSchemas[0].isMacro" data-cy="macro-input-schema" data-testid="macro-input-schema">\n    {{MyInputSchemaCtrl.inputSchemas[0].schema}}\n  </div>\n\n  \n\n</div>\n\n\n'
      );
      $templateCache.put(
        'widget-container/widget-join-types/widget-join-types.html',
        '\n\n<div class="multi-checkboxes-container" ng-class="{empty: JoinTypes.inputs.length === 0}">\n  <div ng-if="JoinTypes.inputs.length > 0">\n    <select class="form-control" ng-model="JoinTypes.joinType" ng-change="JoinTypes.changeJoinType()" ng-options="option as option for option in JoinTypes.optionsDropdown">\n    </select>\n\n    <div class="checkboxes-group" ng-if="JoinTypes.joinType === \'Outer\'">\n      <div class="subtitle">Required Inputs</div>\n\n      <div class="text-warning" ng-if="JoinTypes.selectedCount === JoinTypes.inputs.length">\n        <span>Setting all stages as required inputs will be treated as Inner Join.</span>\n      </div>\n\n      <div class="row checkboxes">\n        <div class="col-xs-6 clearfix" ng-repeat="input in JoinTypes.inputs">\n          <div class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="input.selected" ng-change="JoinTypes.formatOutput()">\n              {{ input.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if="JoinTypes.inputs.length === 0">\n    <h4>No input stages</h4>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-json-editor/widget-json-editor.html',
        '\n\n<div class="widget-json-editor">\n  <div ng-if="JsonEditor.warning && !JsonEditor.disabled">\n    <span class="text-warning">\n      {{ JsonEditor.warning }}\n    </span>\n  </div>\n\n  <div class="textarea-container">\n    <textarea class="form-control" data-ng-trim="false" ng-model="JsonEditor.internalModel" placeholder="{{placeholder}}" data-cy="{{JsonEditor.cy}}">\n    </textarea>\n\n    <button ng-if="!JsonEditor.disabled" class="tidy-button btn btn-default" ng-click="JsonEditor.tidy()">\n      Tidy\n    </button>\n  </div>\n\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-keyvalue/widget-keyvalue.html',
        '\n\n<div class="keyvalue-container">\n  <div ng-repeat="property in properties" class="row" ng-keypress="enter($event, $last)">\n    <div class="col-xs-10 col-lg-8">\n      <input type="text" class="form-control" ng-model="property.key" placeholder="{{ keyPlaceholder }}" my-focus-watch="property.newField">\n      <input type="text" class="form-control" ng-model="property.value" placeholder="{{ valuePlaceholder }}" ng-if="!isDropdown">\n      <select class="form-control" ng-model="property.value" ng-if="isDropdown" ng-options="option as option for option in dropdownOptions">\n      </select>\n    </div>\n    <div class="col-xs-2 col-lg-4 field-actions">\n      <a href="" class="btn btn-danger" ng-click="removeProperty(property)">\n        <span class="fa fa-fw fa-trash"> </span>\n      </a>\n      <a class="btn btn-info btn-transparent" ng-click="addProperty()" ng-if="$last">\n        <span class="fa fa-fw fa-plus"></span>\n      </a>\n    </div>\n  </div>\n\n  <div ng-if="properties.length === 0" class="empty-container">\n    <a class="btn btn-blue" ng-click="addProperty()">\n      <span class="fa fa-fw fa-plus"></span>\n      <span>Add Property</span>\n    </a>\n  </div>\n\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-keyvalue-encoded/widget-keyvalue-encoded.html',
        '\n\n<div class="keyvalue-container">\n\n  <div ng-repeat="property in properties" class="row" ng-keypress="enter($event, $last)">\n    <div class="inputs-container">\n      <input type="text" class="form-control" ng-model="property.key" placeholder="{{ keyPlaceholder }}" my-focus-watch="property.newField">\n      <input type="text" class="form-control" ng-model="property.value" placeholder="{{ valuePlaceholder }}" ng-if="!isDropdown">\n      <select class="form-control" ng-model="property.value" ng-if="isDropdown" ng-options="option as option for option in dropdownOptions">\n      </select>\n    </div>\n    <div class="btns-container">\n      <a href="" class="btn btn-danger" ng-click="removeProperty(property)">\n        <span class="fa fa-fw fa-trash"> </span>\n      </a>\n      <a class="btn btn-info btn-transparent" ng-click="addProperty()" ng-if="$last">\n        <span class="fa fa-fw fa-plus"></span>\n      </a>\n    </div>\n  </div>\n\n  <div ng-if="properties.length === 0" class="empty-container">\n    <a class="btn btn-blue" ng-click="addProperty()">\n      <span class="fa fa-fw fa-plus"></span>\n      <span>Add Property</span>\n    </a>\n  </div>\n\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-number/widget-number.html',
        '\n<div>\n  <span class="text-danger" ng-if="showErrorMessage" ng-bind="error"></span>\n  <input type="number" uib-tooltip="{{error}}" tooltip-class="error-tooltip" ng-class="{\'invalid-number\': error.length}" tooltip-enable="!showErrorMessage" class="form-control" min="{{min}}" max="{{max}}" ng-model="internalModel">\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-output-schema/widget-output-schema.html',
        '\n\n<div ng-if="isDisabled">\n  <my-complex-schema-editor ng-if="!schemaAdvance" schemas="MyOutputSchemaCtrl.outputSchemas" is-disabled="true" plugin-name="node.plugin.name">\n  </my-complex-schema-editor>\n</div>\n<div ng-if="!isDisabled">\n  <my-complex-schema-editor ng-if="!schemaAdvance" schemas="MyOutputSchemaCtrl.outputSchemas" input-schema="node.inputSchema" is-disabled="groupsConfig.outputSchema.implicitSchema" plugin-properties="node.plugin.properties" config="groupsConfig.outputSchema.schemaProperties" plugin-name="node.plugin.name" update-default-output-schema="updateDefaultOutputSchema({outputSchema: outputSchema})" on-change="MyOutputSchemaCtrl.onOutputSchemaChange(newOutputSchemas)" is-in-studio="true" errors="errors">\n  </my-complex-schema-editor>\n</div>\n<div ng-if="schemaAdvance">\n  <input class="form-control" id="macro-input-schema" ng-model="MyOutputSchemaCtrl.outputSchemaString" ng-change="MyOutputSchemaCtrl.onOutputSchemaChange(MyOutputSchemaCtrl.outputSchemaString)" ng-disabled="isDisabled">\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-password/widget-password.html',
        '\n\n<div class="col-md-12 password-text-wrapper">\n      <input type="{{elementType}}" class="form-control" ng-model="model">\n      <i class="fa" ng-click="togglePassword()" ng-class="{\'fa-eye-slash\': elementType === \'password\', \'fa-eye\': elementType === \'text\'}"></i>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-radio-group/widget-radio-group.html',
        '\n<div ng-class="{\n    \'widget-radio-group\': true,\n    \'widget-radio-group-inline\': layout === \'inline\'\n  }">\n  <div ng-if="error">\n    <div class="text-danger">\n      {{error}}\n      <div ng-if="model">\n          <label>\n            <input type="radio" id="{{model}}" value="{{model}}" name="{{groupName}}" ng-model="model">\n            {{model}}\n          </label>\n      </div>\n    </div>\n  </div>\n  <div ng-class="{\n      radio: layout === \'block\',\n      \'radio-inline\': layout === \'inline\'\n    }" ng-repeat="option in options">\n    <label>\n      <input type="radio" id="{{option.elementid}}" value="{{option.id}}" name="{{groupName}}" ng-model="$parent.model">\n      {{option.label}}\n    </label>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-rulesengine-editor/rules-engine-modal.html',
        '\n\n<div class="modal-header clearfix">\n  <h4 class="modal-title pull-left">Rules Engine</h4>\n  <a class="btn" ng-click="$close()">\n    <span class="fa fa-remove"></span>\n    <span class="sr-only"> Close </span>\n  </a>\n</div>\n<div class="modal-body">\n  <rules-engine-home embedded="true" rulebookid="RulesEngineModalCtrl.rulebookid" on-apply="RulesEngineModalCtrl.onApply" watch-depth="reference">\n  </rules-engine-home>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-rulesengine-editor/widget-rulesengine-editor.html',
        '\n\n<div class="clearfix">\n  <div class="rules-engine-button text-xs-right">\n    <button class="btn btn-primary" ng-click="openRulesEngineModal()">\n      <span class="fa icon-DataPreparation"></span>\n      <span>Rules</span>\n    </button>\n  </div>\n  <div ng-model="model" mode="scala" config="config" properties="properties" my-ace-editor>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-schedule/widget-schedule.html',
        '\n\n<table class="table table-bordered">\n  <tbody>\n    <tr class="text-center">\n      <td><strong>Min</strong></td>\n      <td><strong>Hour</strong></td>\n      <td><strong>Day</strong></td>\n      <td><strong>Month</strong></td>\n      <td><strong>Day of Week</strong></td>\n    </tr>\n    <tr>\n      <td class="col-xs-2">\n        <input type="text" class="form-control text-center" ng-model="schedule.min">\n      </td>\n      <td class="col-xs-2">\n        <input type="text" class="form-control text-center" ng-model="schedule.hour">\n      </td>\n      <td class="col-xs-2">\n        <input type="text" class="form-control text-center" ng-model="schedule.day">\n      </td>\n      <td class="col-xs-2">\n        <input type="text" class="form-control text-center" ng-model="schedule.month">\n      </td>\n      <td class="col-xs-2">\n        <input type="text" class="form-control text-center" ng-model="schedule.week">\n      </td>\n    </tr>\n  </tbody>\n</table>\n'
      );
      $templateCache.put(
        'widget-container/widget-schema-editor/widget-schema-editor.html',
        '\n\n<fieldset ng-disabled="disabled">\n  <div class="schema-container" ng-if="fields === \'GROK\'">\n    <div class="schema-inner">\n      <label class="control-label">Pattern</label>\n      <input type="text" class="form-control" ng-model="grok[\'pattern\']">\n    </div>\n  </div>\n\n  <div class="schema-container" ng-if="fields === \'SHOW\' || fields === \'GROK\'">\n    <div class="text-danger" ng-if="error">\n      {{ error }}\n    </div>\n    <div ng-if="properties.length > 0">\n      <fieldset ng-disabled="disableEdit">\n        <table class="table">\n          <thead>\n            <th>\n              <label class="control-label">Name</label>\n            </th>\n            <th>\n              <label class="control-label">Type</label>\n            </th>\n            <th class="text-center">\n              <label class="control-label">Null</label>\n            </th>\n            <th></th>\n          </thead>\n          \n          <tbody infinite-scroll="loadNextSetOfRows()" infinite-scroll-container="\'.modal.hydrator-modal.node-config-modal .bottompanel-body\'" infinite-scroll-disabled="properties.length <= limitedToView">\n            <tr ng-repeat="property in properties | limitTo: limitedToView track by $index" ng-keypress="enter($event, $index)" ng-click="emptyRowClick(property, $index)">\n              <td class="name" ng-if="!property.empty" ng-class="{\'active-cell\': activeCell === true}">\n                <input ng-focus="activeCell = true" ng-blur="activeCell = false" type="text" class="form-control" ng-model="property.name" placeholder="name" my-focus-watch="property.newField" ng-disabled="property.readonly">\n              </td>\n              <td class="type" ng-if="!property.empty" ng-class="{\'active-cell\': activeCell === true}">\n                <div class="select-wrapper">\n                  <select ng-model="property.type" class="form-control col-xs-4" ng-disabled="property.readonly" ng-options="option as option for option in options" ng-focus="activeCell = true" ng-blur="activeCell = false"></select>\n                </div>\n              </td>\n              <td class="text-center nullable" ng-if="!property.empty" ng-class="{\'active-cell\': activeCell === true}">\n                <input type="checkbox" ng-disabled="property.readonly" ng-model="property.nullable" ng-focus="activeCell = true" ng-blur="activeCell = false">\n              </td>\n              <td class="text-center trash" ng-if="!property.empty">\n                <button href="" class="btn" ng-click="removeProperty(property)" ng-disabled="property.readonly">\n                  <span class="fa fa-fw fa-trash"> </span>\n                </button>\n              </td>\n\n              <td class="name" ng-if="property.empty"></td>\n              <td class="type" ng-if="property.empty"></td>\n              <td class="nullable" ng-if="property.empty"></td>\n              <td class="trash" ng-if="property.empty"></td>\n            </tr>\n          </tbody>\n        </table>\n      </fieldset>\n    </div>\n\n  </div>\n\n  <div class="schema-container" ng-if="fields === \'AVRO\'">\n    <div class="schema-inner">\n      <textarea cask-json-edit="avro[\'schema\']" class="form-control avro"></textarea>\n    </div>\n  </div>\n\n  <div class="schema-container" ng-if="fields === \'NOTHING\'">\n    <div class="schema-inner">\n      <div class="well well-lg text-center">\n        <h4>No Editable Schema</h4>\n      </div>\n    </div>\n  </div>\n\n  <a class="sr-only" id="schema-export-link" href="{{url}}" download="{{exportFileName}}.json">Export</a>\n\n</fieldset>\n'
      );
      $templateCache.put(
        'widget-container/widget-sql-conditions/widget-sql-conditions.html',
        '\n\n<div class="sql-conditions-container">\n  <div class="text-danger" ng-if="SqlConditions.error && SqlConditions.stageList.length > 0">{{ SqlConditions.error }}</div>\n\n  <div class="text-warning" ng-if="SqlConditions.warning && !SqlConditions.error">\n    {{ SqlConditions.warning }}\n  </div>\n\n  <div class="rule clearfix" ng-if="SqlConditions.stageList.length > 0" ng-repeat="rule in SqlConditions.rules track by $index" ng-mouseenter="rule.hover = true" ng-mouseleave="rule.hover = false">\n\n    <div class="select-fields-group">\n      <button class="delete-field-button btn btn-link" type="button" ng-if="rule.hover && SqlConditions.rules.length !== 1 && !SqlConditions.disabled" ng-click="SqlConditions.deleteRule($index)">x</button>\n\n      <div class="stage-row" ng-repeat="field in rule">\n        <div class="select-field">\n          <p>{{ field.stageName }}</p>\n        </div>\n        <div class="select-field">\n          <select class="form-control" ng-model="field.fieldName" ng-options="option as option for option in SqlConditions.mapInputSchema[field.stageName]" ng-change="SqlConditions.formatOutput()">\n          </select>\n        </div>\n        <div class="field-equality" ng-if="!$last">\n          <span>=</span>\n        </div>\n      </div>\n    </div>\n\n    <div class="rule-action-buttons">\n      <span class="btn btn-sm btn-field-actions" ng-if="!$last">\n        AND\n      </span>\n\n      <button class="btn btn-sm btn-field-actions plus" ng-if="$last" type="button" ng-click="SqlConditions.addRule()">\n        <i class="fa fa-plus"></i>\n      </button>\n    </div>\n  </div>\n\n  <div ng-if="SqlConditions.stageList.length === 0">\n    <h4 class="empty-message">No input stages</h4>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-sql-select-fields/widget-sql-select-fields.html',
        '\n\n<div class="sql-select-fields-container">\n\n  <div class="button-container">\n    <button class="btn btn-sm btn-default" type="button" ng-click="SqlSelector.toggleAll(SqlSelector.expandedButton)">\n      <span ng-if="SqlSelector.expandedButton">Expand All</span>\n      <span ng-if="!SqlSelector.expandedButton">Collapse All</span>\n    </button>\n    <button class="btn btn-sm btn-reset" type="button" ng-click="SqlSelector.resetAll()">\n      Reset All\n    </button>\n  </div>\n\n  <div class="text-danger error-message" ng-if="SqlSelector.errors.exist">\n    {{ SqlSelector.errors.message }}\n  </div>\n\n  <div ng-repeat="stage in SqlSelector.parsedInputSchemas" class="stage-container">\n    <h4 ng-click="stage.expanded = !stage.expanded" ng-class="{\'expanded\': stage.expanded }">\n      <span class="fa" ng-class="{ \'fa-caret-right\': !stage.expanded, \'fa-caret-down\': stage.expanded}"></span>\n      <span>{{ stage.name }}</span>\n      <span class="badge badge-danger" ng-if="SqlSelector.errors.stageCount[stage.name] > 0">\n        {{ SqlSelector.errors.stageCount[stage.name] }}\n      </span>\n    </h4>\n\n    <div class="table-container" ng-if="stage.expanded">\n      <table class="table">\n        <thead>\n          <th>Name</th>\n          <th class="checkbox-column">\n            <div class="btn-group" uib-dropdown dropdown-append-to-body>\n              <button class="btn btn-default" type="button" uib-dropdown-toggle>\n                Select <span class="fa fa-chevron-down"></span>\n              </button>\n              <ul class="dropdown-menu sql-select-dropwdown" uib-dropdown-menu role="menu">\n                <li role="menuitem">\n                  <a ng-click="SqlSelector.toggleAllFields(stage, true)">All</a>\n                </li>\n                <li role="menuitem">\n                  <a ng-click="SqlSelector.toggleAllFields(stage, false)">None</a>\n                </li>\n              </ul>\n            </div>\n\n          </th>\n          <th>Alias</th>\n        </thead>\n\n        <tbody>\n          <tr ng-repeat="field in stage.schema" ng-class="{\'error\': SqlSelector.aliases[field.alias] > 1}">\n            <td>{{ field.name }}</td>\n            <td class="checkbox-column">\n              <input type="checkbox" ng-model="field.selected" ng-change="SqlSelector.formatOutput()">\n            </td>\n            <td>\n              <input type="text" class="form-control" ng-model="field.alias" ng-blur="SqlSelector.formatOutput()" ng-disabled="!field.selected">\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <div ng-if="SqlSelector.parsedInputSchemas.length === 0">\n    <h4 class="empty-message">No input stages</h4>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-textarea-validate/widget-textarea-validate.html',
        '\n\n<div class="widget-textarea-validate">\n  <div ng-if="(TextareaValidate.warning || TextareaValidate.success) && !TextareaValidate.disabled">\n    <span class="text-warning" ng-if="TextareaValidate.warning.length > 0">\n      {{ TextareaValidate.warning }}\n    </span>\n    <span class="text-success" ng-if="TextareaValidate.success.length > 0">\n      {{ TextareaValidate.success }}\n    </span>\n  </div>\n\n  <div class="textarea-container">\n    <textarea class="form-control" data-ng-trim="false" ng-model="TextareaValidate.model" placeholder="{{TextareaValidate.placeholder}}">\n    </textarea>\n\n    <button ng-if="!TextareaValidate.disabled" class="validate-button btn btn-default" ng-click="TextareaValidate.validate()">\n      {{ TextareaValidate.buttonText }}\n    </button>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'widget-container/widget-toggle-switch/widget-toggle-switch.html',
        '\n\n<toggle-switch is-on="isOn" on-toggle="onToggle" on-label="onLabel" off-label="offLabel" disabled="disabled">\n</toggle-switch>\n'
      );
      $templateCache.put(
        'widget-container/widget-wrangler-directives/widget-wrangler-directives.html',
        '\n<div class="clearfix">\n  <div my-ace-editor ng-model="model" disabled="disabled" data-config="config" mode="plain_text" rows="{{rows}}" placeholder="{{placeholder}}">\n  </div>\n\n  <div class="wrangler-button">\n    <div class="btn btn-primary" ng-class="{\'disabled\': disabled}" ng-click="openWranglerModal()">\n      <span class="fa icon-DataPreparation"></span>\n      <span>Wrangle</span>\n    </div>\n  </div>\n</div>\n'
      );
      $templateCache.put(
        'plugin-functions/functions/get-schema/get-schema-modal.html',
        '\n\n<div class="modal-header clearfix">\n  <h3 class="modal-title pull-left">Query:</h3>\n  <div class="btn-group pull-right">\n    <a class="btn" ng-click="$dismiss()">\n      <span class="fa fa-times"></span>\n    </a>\n  </div>\n</div>\n\n<div class="modal-body">\n  <div class="row">\n    <div class="col-xs-12">\n      <div my-ace-editor mode="sql" class="query-input pull-left" ng-model="GetSchemaModalController.query"></div>\n\n      <button class="btn btn-default pull-right" ng-click="GetSchemaModalController.fetchSchema()">\n        Execute\n      </button>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-xs-12">\n      <my-complex-schema ng-model="GetSchemaModalController.schema" is-disabled="true" ng-if="GetSchemaModalController.schema && !GetSchemaModalController.error">\n      </my-complex-schema>\n\n      <p class="text-danger" ng-if="GetSchemaModalController.error">\n        Error: {{ GetSchemaModalController.error }}\n      </p>\n    </div>\n  </div>\n</div>\n\n<div class="modal-footer" ng-if="GetSchemaModalController.schema">\n  <button class="btn btn-blue" ng-disabled="!GetSchemaModalController.schema" ng-click="GetSchemaModalController.apply()">\n    Apply\n  </button>\n</div>\n'
      );
      $templateCache.put(
        'plugin-functions/functions/get-schema/get-schema.html',
        '\n\n<button class="btn btn-default pull-right" type="button" ng-click="GetSchemaController.openModal()">\n  Get Schema\n</button>\n'
      );
      $templateCache.put(
        'plugin-functions/functions/get-property-value/get-property-value-modal.html',
        '\n\n<div class="modal-header clearfix">\n  <h3 class="modal-title pull-left">Property Value</h3>\n  <div class="btn-group pull-right">\n    <a class="btn" ng-click="$dismiss()">\n      <span class="fa fa-times"></span>\n    </a>\n  </div>\n</div>\n\n<div class="modal-body">\n  <div ng-if="GetPropertyValueModalController.showLoading">\n    <h3 class="fa fa-spin fa-refresh"></h3>\n  </div>\n\n  <fieldset disabled="true" ng-if="GetPropertyValueModalController.propertyValue">\n    <my-json-textbox ng-model="GetPropertyValueModalController.propertyValue" disabled="true">\n    </my-json-textbox>\n  </fieldset>\n\n  <p class="text-danger" ng-if="GetPropertyValueModalController.error">\n    Error: {{ GetPropertyValueModalController.error }}\n  </p>\n  </div>\n\n\n<div class="modal-footer" ng-if="GetPropertyValueModalController.propertyValue">\n  <button class="btn btn-blue" ng-disabled="!GetPropertyValueModalController.propertyValue" ng-click="GetPropertyValueModalController.apply()">\n    Apply\n  </button>\n</div>\n'
      );
      $templateCache.put(
        'plugin-functions/functions/get-property-value/get-property-value.html',
        '\n\n<button class="btn btn-default pull-right" type="button" ng-disabled="GetPropertyValueController.requiredProperties.indexOf(\'\') !== -1" ng-click="GetPropertyValueController.openModal()">\n  <span ng-if="GetPropertyValueController.requiredProperties.indexOf(\'\') !== -1" uib-tooltip="{{OutputSchemaController.missingFieldsWarningMessage}}" tooltip-append-to-body="true">\n    <i class="fa fa-exclamation-triangle text-warning"></i>\n  </span>\n  {{GetPropertyValueController.label}}\n</button>\n'
      );
      $templateCache.put(
        'plugin-functions/functions/output-schema/output-schema-modal.html',
        '\n\n<div class="modal-header clearfix">\n  <h3 class="modal-title pull-left">Output schema</h3>\n  <div class="btn-group pull-right">\n    <a class="btn" ng-click="$dismiss()">\n      <span class="fa fa-times"></span>\n    </a>\n  </div>\n</div>\n\n<div class="modal-body">\n  <div class="widget-added-properties-container" ng-if="GetSchemaModalController.additionalPropertiesFields.length > 0">\n    <div class="field-row row" ng-repeat="field in GetSchemaModalController.additionalPropertiesFields">\n      <label class="label-control col-xs-2 text-right">{{ field.label }}</label>\n      <div class="my-widget-container col-xs-10" data-name="field" data-model="GetSchemaModalController.additionalProperties[field.name]" data-myconfig="field" data-properties="GetSchemaModalController.additionalProperties" widget-container>\n      </div>\n    </div>\n    <div class="action-button-container row">\n      <div class="col-xs-12 text-right">\n        <button class="btn btn-primary" ng-click="GetSchemaModalController.makeRequest()">\n          Execute\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if="GetSchemaModalController.showLoading">\n    <h3 class="fa fa-spin fa-refresh"></h3>\n  </div>\n\n  <div class="row">\n    <div class="col-xs-12">\n      <div ng-repeat="schema in GetSchemaModalController.schemas" class="get-schema-modal-schema">\n        <span ng-if="schema.name !== \'etlSchemaBody\'">\n          {{schema.name | caskCapitalizeFilter}}\n        </span>\n        <my-complex-schema ng-model="schema.schema" is-disabled="true" ng-if="schema.schema && !GetSchemaModalController.error">\n        </my-complex-schema>\n      </div>\n\n      <p class="text-danger" ng-if="GetSchemaModalController.error">\n        Error: {{ GetSchemaModalController.error }}\n      </p>\n\n      <ul class="text-danger" ng-if="GetSchemaModalController.stageErrors.length > 0">\n        <li ng-repeat="err in GetSchemaModalController.stageErrors">\n          {{ err }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class="modal-footer" ng-if="GetSchemaModalController.schemas">\n  <button class="btn btn-blue" ng-disabled="!GetSchemaModalController.schemas" ng-click="GetSchemaModalController.apply()">\n    Apply\n  </button>\n</div>\n'
      );
      $templateCache.put(
        'plugin-functions/functions/output-schema/output-schema.html',
        '\n\n<button class="btn {{ OutputSchemaController.btnClass }} pull-right" type="button" ng-disabled="OutputSchemaController.requiredProperties.indexOf(\'\') !== -1" ng-click="OutputSchemaController.openModal()">\n  <span ng-if="OutputSchemaController.requiredProperties.indexOf(\'\') !== -1" uib-tooltip="{{OutputSchemaController.missingFieldsWarningMessage}}" tooltip-append-to-body="true">\n    <i class="fa fa-exclamation-triangle text-warning"></i>\n  </span>\n  <span>{{ OutputSchemaController.label }}</span>\n</button>\n'
      );
      $templateCache.put(
        'pipeline-export-modal/pipeline-export-modal-template.html',
        '\n<div class="modal-header clearfix">\n  <h3 class="modal-title pull-left">Export pipeline configuration</h3>\n  <div class="btn-group pull-right">\n    <a class="btn" ng-click="$close()" data-cy="export-pipeline-close-modal-btn" data-testid="export-pipeline-close-modal-btn">\n      <span class="fa fa-remove"></span>\n      <span class="sr-only"> Close </span>\n    </a>\n  </div>\n</div>\n<div class="modal-body config-modal">\n  <fieldset disabled="true" class="view-plugin-json">\n    <my-json-textbox ng-model="config" disabled="true" data-cy="pipeline-export-json-container" data-testid="pipeline-export-json-container"></my-json-textbox>\n  </fieldset>\n  <br>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-grey-cancel" ng-click="$close()">Cancel</button>\n  <button class="btn btn-blue" ng-click="export()">Export</button>\n</div>\n\n\n<a class="sr-only" id="pipeline-export-config-link" href="{{url}}" download="{{exportFileName}}.json">Export</a>\n'
      );
    },
  ]);
    